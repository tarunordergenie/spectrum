-- phpMyAdmin SQL Dump
-- version 4.9.0.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Feb 07, 2020 at 10:24 AM
-- Server version: 10.4.6-MariaDB
-- PHP Version: 7.3.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `spectrum`
--

-- --------------------------------------------------------

--
-- Table structure for table `answers`
--

CREATE TABLE `answers` (
  `id` int(11) NOT NULL,
  `doctor_id` int(11) NOT NULL,
  `survey_type_id` int(11) NOT NULL,
  `answer` longtext NOT NULL,
  `patient_id` int(11) DEFAULT NULL,
  `patient_initial` varchar(100) DEFAULT NULL,
  `status` int(1) NOT NULL DEFAULT 1,
  `created_on` datetime NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

INSERT INTO `answers` (`id`, `doctor_id`, `survey_type_id`, `answer`, `patient_id`, `patient_initial`, `status`, `created_on`) VALUES
(1, 1, 2, '[{\"question_id\":6,\"ans\":\"2020-01-01\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":7,\"ans\":\"Akash Kumar\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":8,\"ans\":\"22\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":9,\"ans\":26,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":10,\"ans\":29,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":25,\"ans\":110,\"survey_type_id\":2,\"parent_question_id\":10,\"specify\":[]}],\"specify\":[]},{\"question_id\":11,\"ans\":36,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":12,\"ans\":\"2018\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":13,\"ans\":[42,45,69],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"op\":69,\"txt\":\"first Specify\"}]},{\"question_id\":14,\"ans\":[91,92],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"op\":91,\"txt\":\"second specify\"},{\"op\":92,\"txt\":\"thisrd specify\"}]},{\"question_id\":15,\"ans\":94,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":16,\"ans\":96,\"survey_type_id\":2,\"parent_question_id\":15,\"specify\":[]}],\"specify\":[]},{\"question_id\":17,\"ans\":[],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":18,\"ans\":[98,99,100],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"op\":98,\"txt\":\"aaaaa\"},{\"op\":99,\"txt\":\"bbbbbbbbbbbb\"},{\"op\":100,\"txt\":\"cccccccccccc\"}]},{\"question_id\":19,\"ans\":[101,102,103],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"op\":101,\"txt\":\"ddddddddddddd\"},{\"op\":102,\"txt\":\"eeeeeeeeeeeeeeeeeeeee\"},{\"op\":103,\"txt\":\"fffffffffffffffffffffffff\"}]},{\"question_id\":20,\"ans\":[104,105,106],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{\"op\":104,\"txt\":\"gggggggggggggggggggg\"},{\"op\":105,\"txt\":\"hhhhhhhhhhhhhhhhhhhhh\"},{\"op\":106,\"txt\":\"iiiiiiiiiiii\"}]}],\"specify\":[]},{\"question_id\":21,\"ans\":108,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":22,\"ans\":\"12\",\"survey_type_id\":2,\"parent_question_id\":21,\"specify\":[],\"ans1\":\"13\",\"ans2\":\"14\"},{\"question_id\":23,\"ans\":\"15\",\"survey_type_id\":2,\"parent_question_id\":21,\"specify\":[],\"ans1\":\"16\",\"ans2\":\"17\",\"ans3\":\"18\"}],\"specify\":[]},{\"question_id\":24,\"ans\":\"2020-02-02\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]}]', 1, 'Akash Kumar', 1, '2020-02-06 12:54:21'),
(2, 1, 2, '[{\"question_id\":6,\"ans\":\"date1\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":7,\"ans\":\"akash kumar\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":8,\"ans\":\"22\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":9,\"ans\":27,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":10,\"ans\":112,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":25,\"ans\":110,\"survey_type_id\":2,\"parent_question_id\":10,\"specify\":[]}],\"specify\":[]},{\"question_id\":11,\"ans\":36,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":12,\"ans\":\"1996\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":13,\"ans\":[41],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null}]},{\"question_id\":14,\"ans\":[71],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null}]},{\"question_id\":15,\"ans\":94,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":16,\"ans\":[],\"survey_type_id\":2,\"parent_question_id\":15,\"specify\":[]}],\"specify\":[]},{\"question_id\":17,\"ans\":[],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":18,\"ans\":[98],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null},{\"op\":93,\"txt\":null},{\"op\":94,\"txt\":null},{\"op\":95,\"txt\":null},{\"op\":96,\"txt\":null},{\"op\":97,\"txt\":null},{\"op\":98,\"txt\":\"sdf\"},{\"op\":99,\"txt\":null},{\"op\":100,\"txt\":null}]},{\"question_id\":19,\"ans\":[101],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null},{\"op\":93,\"txt\":null},{\"op\":94,\"txt\":null},{\"op\":95,\"txt\":null},{\"op\":96,\"txt\":null},{\"op\":97,\"txt\":null},{\"op\":98,\"txt\":null},{\"op\":99,\"txt\":null},{\"op\":100,\"txt\":null},{\"op\":101,\"txt\":\"dsf\"},{\"op\":102,\"txt\":null},{\"op\":103,\"txt\":null}]},{\"question_id\":20,\"ans\":[104],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null},{\"op\":93,\"txt\":null},{\"op\":94,\"txt\":null},{\"op\":95,\"txt\":null},{\"op\":96,\"txt\":null},{\"op\":97,\"txt\":null},{\"op\":98,\"txt\":null},{\"op\":99,\"txt\":null},{\"op\":100,\"txt\":null},{\"op\":101,\"txt\":null},{\"op\":102,\"txt\":null},{\"op\":103,\"txt\":null},{\"op\":104,\"txt\":\"hj\"},{\"op\":105,\"txt\":null},{\"op\":106,\"txt\":null}]}],\"specify\":[]},{\"question_id\":21,\"ans\":108,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":22,\"ans\":\"65\",\"survey_type_id\":2,\"parent_question_id\":21,\"specify\":[],\"ans1\":\"565\",\"ans2\":\"6565\"},{\"question_id\":23,\"ans\":\"656\",\"survey_type_id\":2,\"parent_question_id\":21,\"specify\":[],\"ans1\":\"656\",\"ans2\":\"6565\",\"ans3\":\"6565\"}],\"specify\":[]},{\"question_id\":24,\"ans\":\"date2\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]}]', 3, 'akash kumar', 1, '2020-02-06 15:46:13'),
(3, 1, 2, '[{\"question_id\":6,\"ans\":\"2020-01-01\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":7,\"ans\":\"yug\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":8,\"ans\":\"yugyug\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":9,\"ans\":26,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":10,\"ans\":31,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":25,\"ans\":110,\"survey_type_id\":2,\"parent_question_id\":10,\"specify\":[]}],\"specify\":[]},{\"question_id\":11,\"ans\":36,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":12,\"ans\":\"2006\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]},{\"question_id\":13,\"ans\":[41],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null}]},{\"question_id\":14,\"ans\":[70,72,74,76,78,81,82],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null}]},{\"question_id\":15,\"ans\":94,\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":16,\"ans\":95,\"survey_type_id\":2,\"parent_question_id\":15,\"specify\":[]}],\"specify\":[]},{\"question_id\":17,\"ans\":[],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":18,\"ans\":[98],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null},{\"op\":93,\"txt\":null},{\"op\":94,\"txt\":null},{\"op\":95,\"txt\":null},{\"op\":96,\"txt\":null},{\"op\":97,\"txt\":null},{\"op\":98,\"txt\":\"yug\"},{\"op\":99,\"txt\":null},{\"op\":100,\"txt\":null}]},{\"question_id\":19,\"ans\":[],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null},{\"op\":93,\"txt\":null},{\"op\":94,\"txt\":null},{\"op\":95,\"txt\":null},{\"op\":96,\"txt\":null},{\"op\":97,\"txt\":null},{\"op\":98,\"txt\":null},{\"op\":99,\"txt\":null},{\"op\":100,\"txt\":null},{\"op\":101,\"txt\":null},{\"op\":102,\"txt\":null},{\"op\":103,\"txt\":null}]},{\"question_id\":20,\"ans\":[],\"survey_type_id\":2,\"parent_question_id\":17,\"specify\":[{\"op\":0,\"txt\":null},{\"op\":1,\"txt\":null},{\"op\":2,\"txt\":null},{\"op\":3,\"txt\":null},{\"op\":4,\"txt\":null},{\"op\":5,\"txt\":null},{\"op\":6,\"txt\":null},{\"op\":7,\"txt\":null},{\"op\":8,\"txt\":null},{\"op\":9,\"txt\":null},{\"op\":10,\"txt\":null},{\"op\":11,\"txt\":null},{\"op\":12,\"txt\":null},{\"op\":13,\"txt\":null},{\"op\":14,\"txt\":null},{\"op\":15,\"txt\":null},{\"op\":16,\"txt\":null},{\"op\":17,\"txt\":null},{\"op\":18,\"txt\":null},{\"op\":19,\"txt\":null},{\"op\":20,\"txt\":null},{\"op\":21,\"txt\":null},{\"op\":22,\"txt\":null},{\"op\":23,\"txt\":null},{\"op\":24,\"txt\":null},{\"op\":25,\"txt\":null},{\"op\":26,\"txt\":null},{\"op\":27,\"txt\":null},{\"op\":28,\"txt\":null},{\"op\":29,\"txt\":null},{\"op\":30,\"txt\":null},{\"op\":31,\"txt\":null},{\"op\":32,\"txt\":null},{\"op\":33,\"txt\":null},{\"op\":34,\"txt\":null},{\"op\":35,\"txt\":null},{\"op\":36,\"txt\":null},{\"op\":37,\"txt\":null},{\"op\":38,\"txt\":null},{\"op\":39,\"txt\":null},{\"op\":40,\"txt\":null},{\"op\":41,\"txt\":null},{\"op\":42,\"txt\":null},{\"op\":43,\"txt\":null},{\"op\":44,\"txt\":null},{\"op\":45,\"txt\":null},{\"op\":46,\"txt\":null},{\"op\":47,\"txt\":null},{\"op\":48,\"txt\":null},{\"op\":49,\"txt\":null},{\"op\":50,\"txt\":null},{\"op\":51,\"txt\":null},{\"op\":52,\"txt\":null},{\"op\":53,\"txt\":null},{\"op\":54,\"txt\":null},{\"op\":55,\"txt\":null},{\"op\":56,\"txt\":null},{\"op\":57,\"txt\":null},{\"op\":58,\"txt\":null},{\"op\":59,\"txt\":null},{\"op\":60,\"txt\":null},{\"op\":61,\"txt\":null},{\"op\":62,\"txt\":null},{\"op\":63,\"txt\":null},{\"op\":64,\"txt\":null},{\"op\":65,\"txt\":null},{\"op\":66,\"txt\":null},{\"op\":67,\"txt\":null},{\"op\":68,\"txt\":null},{\"op\":69,\"txt\":null},{\"op\":70,\"txt\":null},{\"op\":71,\"txt\":null},{\"op\":72,\"txt\":null},{\"op\":73,\"txt\":null},{\"op\":74,\"txt\":null},{\"op\":75,\"txt\":null},{\"op\":76,\"txt\":null},{\"op\":77,\"txt\":null},{\"op\":78,\"txt\":null},{\"op\":79,\"txt\":null},{\"op\":80,\"txt\":null},{\"op\":81,\"txt\":null},{\"op\":82,\"txt\":null},{\"op\":83,\"txt\":null},{\"op\":84,\"txt\":null},{\"op\":85,\"txt\":null},{\"op\":86,\"txt\":null},{\"op\":87,\"txt\":null},{\"op\":88,\"txt\":null},{\"op\":89,\"txt\":null},{\"op\":90,\"txt\":null},{\"op\":91,\"txt\":null},{\"op\":92,\"txt\":null},{\"op\":93,\"txt\":null},{\"op\":94,\"txt\":null},{\"op\":95,\"txt\":null},{\"op\":96,\"txt\":null},{\"op\":97,\"txt\":null},{\"op\":98,\"txt\":null},{\"op\":99,\"txt\":null},{\"op\":100,\"txt\":null},{\"op\":101,\"txt\":null},{\"op\":102,\"txt\":null},{\"op\":103,\"txt\":null},{\"op\":104,\"txt\":null},{\"op\":105,\"txt\":null},{\"op\":106,\"txt\":null}]}],\"specify\":[]},{\"question_id\":21,\"ans\":[],\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[{\"question_id\":22,\"ans\":\"65\",\"survey_type_id\":2,\"parent_question_id\":21,\"specify\":[],\"ans1\":\"65\",\"ans2\":\"65\"},{\"question_id\":23,\"ans\":\"56\",\"survey_type_id\":2,\"parent_question_id\":21,\"specify\":[],\"ans1\":\"65\",\"ans2\":\"65\",\"ans3\":\"65\"}],\"specify\":[]},{\"question_id\":24,\"ans\":\"2020-02-02\",\"survey_type_id\":2,\"parent_question_id\":0,\"subQuestions\":[],\"specify\":[]}]', 4, 'yug', 1, '2020-02-06 16:02:08');

-- --------------------------------------------------------

--
-- Table structure for table `city_m`
--

CREATE TABLE `city_m` (
  `City_ID` int(11) NOT NULL,
  `Province_ID` int(11) NOT NULL,
  `City_Name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `city_m`
--

INSERT INTO `city_m` (`City_ID`, `Province_ID`, `City_Name`) VALUES
(1, 5, 'Airdrie'),
(2, 5, 'Athabasca'),
(3, 5, 'Banff'),
(4, 5, 'Barrhead'),
(5, 5, 'Bashaw'),
(6, 5, 'Bassano'),
(7, 5, 'Beaumont'),
(8, 5, 'Beaverlodge'),
(9, 5, 'Bellevue'),
(10, 5, 'Bentley'),
(11, 5, 'Black Diamond'),
(12, 5, 'Blackfalds'),
(13, 5, 'Blairmore'),
(14, 5, 'Bonnyville'),
(15, 5, 'Bow Island'),
(16, 5, 'Boyle'),
(17, 5, 'Bragg Creek'),
(18, 5, 'Brooks'),
(19, 5, 'Calgary'),
(20, 5, 'Calmar'),
(21, 5, 'Camrose'),
(22, 5, 'Canmore'),
(23, 5, 'Cardston'),
(24, 5, 'Carstairs'),
(25, 5, 'Castor'),
(26, 5, 'Chestermere'),
(27, 5, 'Clairmont'),
(28, 5, 'Claresholm'),
(29, 5, 'Coaldale'),
(30, 5, 'Cochrane'),
(31, 5, 'Cold Lake'),
(32, 5, 'Coleman'),
(33, 5, 'Coronation'),
(34, 5, 'Cowley'),
(35, 5, 'Crossfield'),
(36, 5, 'Darwell'),
(37, 5, 'Daysland'),
(38, 5, 'De Winton'),
(39, 5, 'Denwood'),
(40, 5, 'Devon'),
(41, 5, 'Didsbury'),
(42, 5, 'Drayton Valley'),
(43, 5, 'Drumheller'),
(44, 5, 'Edmonton'),
(45, 5, 'Edson'),
(46, 5, 'Elk Point'),
(47, 5, 'Evansburg'),
(48, 5, 'Fairview'),
(49, 5, 'Falher'),
(50, 5, 'Fallis'),
(51, 5, 'Foothills'),
(52, 5, 'Fort MacLeod'),
(53, 5, 'Fort McMurray'),
(54, 5, 'Fort Saskatchewan'),
(55, 5, 'Fort Vermilion'),
(56, 5, 'Fox Creek'),
(57, 5, 'Gibbons'),
(58, 5, 'Gleichen'),
(59, 5, 'Glendon'),
(60, 5, 'Grande Cache'),
(61, 5, 'Grande Prairie'),
(62, 5, 'Grimshaw'),
(63, 5, 'Hanna'),
(64, 5, 'Hardisty'),
(65, 5, 'Heritage Pointe'),
(66, 5, 'High Level'),
(67, 5, 'High Prairie'),
(68, 5, 'High River'),
(69, 5, 'Hinton'),
(70, 5, 'Hobbema'),
(71, 5, 'Hythe'),
(72, 5, 'Innisfail'),
(73, 5, 'Jasper'),
(74, 5, 'Kapasiwin'),
(75, 5, 'Killam'),
(76, 5, 'Kinuso'),
(77, 5, 'La Crete'),
(78, 5, 'Lac La Biche'),
(79, 5, 'Lacombe'),
(80, 5, 'Lake Louise'),
(81, 5, 'Lamont'),
(82, 5, 'Langdon'),
(83, 5, 'Leduc'),
(84, 5, 'Lethbridge'),
(85, 5, 'Lloydminster'),
(86, 5, 'Magrath'),
(87, 5, 'Manning'),
(88, 5, 'Maskwacis'),
(89, 5, 'Mayerthorpe'),
(90, 5, 'McLennan'),
(91, 5, 'Medicine Hat'),
(92, 5, 'Milk River'),
(93, 5, 'Moncton'),
(94, 5, 'Morinville'),
(95, 5, 'Nanton'),
(96, 5, 'Okotoks'),
(97, 5, 'Olds'),
(98, 5, 'Onoway'),
(99, 5, 'Oyen'),
(100, 5, 'Peace River'),
(101, 5, 'Picture Butte'),
(102, 5, 'Pincher Creek'),
(103, 5, 'Ponoka'),
(104, 5, 'Provost'),
(105, 5, 'Ralston'),
(106, 5, 'Raymond'),
(107, 5, 'Red Deer County'),
(108, 5, 'Red Deer'),
(109, 5, 'Redcliff'),
(110, 5, 'Redwater'),
(111, 5, 'Redwood Meadows'),
(112, 5, 'Rimbey'),
(113, 5, 'Rocky Mountain House'),
(114, 5, 'Saddle Lake'),
(115, 5, 'Sedgewick'),
(116, 5, 'Sexsmith'),
(117, 5, 'Sherwood Park'),
(118, 5, 'Siksika'),
(119, 5, 'Slave Lake'),
(120, 5, 'Slyvan Lake'),
(121, 5, 'Smoky Lake'),
(122, 5, 'Spirit River'),
(123, 5, 'Spruce Grove'),
(124, 5, 'St Albert'),
(125, 5, 'St Paul'),
(126, 5, 'St. Albert'),
(127, 5, 'St. Paul'),
(128, 5, 'Stand Off'),
(129, 5, 'Stettler'),
(130, 5, 'Stony Plain'),
(131, 5, 'Strathmore'),
(132, 5, 'Sundre'),
(133, 5, 'Swan Hills'),
(134, 5, 'Sylvan Lake'),
(135, 5, 'Taber'),
(136, 5, 'Three Hills'),
(137, 5, 'Tofield'),
(138, 5, 'Trochu'),
(139, 5, 'Two Hills'),
(140, 5, 'Valleyview'),
(141, 5, 'Vegreville'),
(142, 5, 'Vermilion'),
(143, 5, 'Viking'),
(144, 5, 'Vulcan'),
(145, 5, 'Wabasca'),
(146, 5, 'Wainwright'),
(147, 5, 'Westlock'),
(148, 5, 'Wetaskiwin'),
(149, 5, 'Whitecourt'),
(150, 3, '100 Mile House'),
(151, 3, '108 Mile Ranch'),
(152, 3, 'Abbotsford'),
(153, 3, 'Agassiz'),
(154, 3, 'Aldergrove'),
(155, 3, 'Alert Bay'),
(156, 3, 'Anmore'),
(157, 3, 'Armstrong'),
(158, 3, 'Ashcroft'),
(159, 3, 'Atlin'),
(160, 3, 'Barriere'),
(161, 3, 'Bella Bella'),
(162, 3, 'Bella Coola'),
(163, 3, 'Bowen Island'),
(164, 3, 'Bowser'),
(165, 3, 'Brackendale'),
(166, 3, 'Brentwood Bay'),
(167, 3, 'Britannia Beach'),
(168, 3, 'Burnaby'),
(169, 3, 'Burns Lake'),
(170, 3, 'Campbell River'),
(171, 3, 'Canoe'),
(172, 3, 'Cassidy'),
(173, 3, 'Castlegar'),
(174, 3, 'Charlie Lake'),
(175, 3, 'Chase'),
(176, 3, 'Chemainus'),
(177, 3, 'Chetwynd'),
(178, 3, 'Chilliwack'),
(179, 3, 'Christina Lake'),
(180, 3, 'Clearwater'),
(181, 3, 'Cobble Hill'),
(182, 3, 'Coldstream'),
(183, 3, 'Comox'),
(184, 3, 'Coquitlam'),
(185, 3, 'Courtenay'),
(186, 3, 'Cranbrook'),
(187, 3, 'Creston'),
(188, 3, 'Cultus Lake'),
(189, 3, 'Cumberland'),
(190, 3, 'Dawson Creek'),
(191, 3, 'Dease Lake'),
(192, 3, 'Delta'),
(193, 3, 'Denman Island'),
(194, 3, 'Denny Island'),
(195, 3, 'Duncan'),
(196, 3, 'Elkford'),
(197, 3, 'Enderby'),
(198, 3, 'Fernie'),
(199, 3, 'Fort Nelson'),
(200, 3, 'Fort St John'),
(201, 3, 'Fort St. James'),
(202, 3, 'Fort St. John'),
(203, 3, 'Fraser Lake'),
(204, 3, 'Fruitvale'),
(205, 3, 'Gabriola'),
(206, 3, 'Galiano'),
(207, 3, 'Garden Bay'),
(208, 3, 'Garibaldi Hghlands'),
(209, 3, 'Gibsons'),
(210, 3, 'Gillies Bay'),
(211, 3, 'Gold River'),
(212, 3, 'Golden'),
(213, 3, 'Grand Forks'),
(214, 3, 'Greenwood'),
(215, 3, 'Hagensborg'),
(216, 3, 'Halfmoon Bay'),
(217, 3, 'Hazelton'),
(218, 3, 'Hope'),
(219, 3, 'Hornby Island'),
(220, 3, 'Houston'),
(221, 3, 'Hudson\'s Hope'),
(222, 3, 'Invermere'),
(223, 3, 'Kamloops'),
(224, 3, 'Kaslo'),
(225, 3, 'Kelowna'),
(226, 3, 'Keremeos'),
(227, 3, 'Kimberley'),
(228, 3, 'Kitimat'),
(229, 3, 'Ladysmith'),
(230, 3, 'Lake Country'),
(231, 3, 'Lake Cowichan'),
(232, 3, 'Langley'),
(233, 3, 'Lantzville'),
(234, 3, 'Lazo'),
(235, 3, 'Lillooet'),
(236, 3, 'Lions Bay'),
(237, 3, 'Logan Lake'),
(238, 3, 'Lumby'),
(239, 3, 'Lytton'),
(240, 3, 'Mackenzie'),
(241, 3, 'Madeira Park'),
(242, 3, 'Mansons Landing'),
(243, 3, 'Maple Ridge'),
(244, 3, 'Masset'),
(245, 3, 'Mayne Island'),
(246, 3, 'Mayne'),
(247, 3, 'McBride'),
(248, 3, 'Merritt'),
(249, 3, 'Midway'),
(250, 3, 'Mill Bay'),
(251, 3, 'Mission'),
(252, 3, 'Nakusp'),
(253, 3, 'Nanaimo'),
(254, 3, 'Nanoose Bay'),
(255, 3, 'Nelson'),
(256, 3, 'New Denver'),
(257, 3, 'New Westminster'),
(258, 3, 'North Saanich'),
(259, 3, 'North Vancouver'),
(260, 3, 'Okanagan Falls'),
(261, 3, 'Oliver'),
(262, 3, 'Osoyoos'),
(263, 3, 'Parksville'),
(264, 3, 'Peachland'),
(265, 3, 'Pemberton'),
(266, 3, 'Pender Island'),
(267, 3, 'Penticton'),
(268, 3, 'Pitt Meadows'),
(269, 3, 'Port Alberni'),
(270, 3, 'Port Alice'),
(271, 3, 'Port Coquitlam'),
(272, 3, 'Port Hardy'),
(273, 3, 'Port McNeill'),
(274, 3, 'Port Moody'),
(275, 3, 'Powell River'),
(276, 3, 'Prince George'),
(277, 3, 'Prince Rupert'),
(278, 3, 'Princeton'),
(279, 3, 'Qualicum Beach'),
(280, 3, 'Quathiaski Cove'),
(281, 3, 'Queen Charlotte'),
(282, 3, 'Quesnel'),
(283, 3, 'Revelstoke'),
(284, 3, 'Richmond'),
(285, 3, 'Rock Creek'),
(286, 3, 'Rossland'),
(287, 3, 'Saanichton'),
(288, 3, 'Salmo'),
(289, 3, 'Salmon Arm'),
(290, 3, 'Salt Spring Island'),
(291, 3, 'Sechelt'),
(292, 3, 'Shawnigan Lake'),
(293, 3, 'Sicamous'),
(294, 3, 'Sidney'),
(295, 3, 'Slocan Park'),
(296, 3, 'Smithers'),
(297, 3, 'Sooke'),
(298, 3, 'Sorrento'),
(299, 3, 'Southbank'),
(300, 3, 'Sparwood'),
(301, 3, 'Squamish'),
(302, 3, 'Stewart'),
(303, 3, 'Summerland'),
(304, 3, 'Surrey'),
(305, 3, 'Tatla Lake'),
(306, 3, 'Telkwa'),
(307, 3, 'Terrace'),
(308, 3, 'Tofino'),
(309, 3, 'Trail'),
(310, 3, 'Tumbler Ridge'),
(311, 3, 'Ucluelet'),
(312, 3, 'Valemount'),
(313, 3, 'Vancouver'),
(314, 3, 'Vanderhoof'),
(315, 3, 'Vernon'),
(316, 3, 'Victoria'),
(317, 3, 'West Kelowna'),
(318, 3, 'West Vancouver'),
(319, 3, 'Westbank'),
(320, 3, 'Whaletown'),
(321, 3, 'Whistler'),
(322, 3, 'White Rock'),
(323, 3, 'Williams Lake'),
(324, 3, 'Winfield'),
(325, 8, 'Altona'),
(326, 8, 'Arborg'),
(327, 8, 'Ashern'),
(328, 8, 'Beausejour'),
(329, 8, 'Beauséjour'),
(330, 8, 'Boissevain'),
(331, 8, 'Brandon'),
(332, 8, 'Carberry'),
(333, 8, 'Carman'),
(334, 8, 'Churchill'),
(335, 8, 'Cross Lake'),
(336, 8, 'Crystal City'),
(337, 8, 'Dauphin'),
(338, 8, 'Deloraine'),
(339, 8, 'East St Paul'),
(340, 8, 'East St. Paul'),
(341, 8, 'Easterville'),
(342, 8, 'Elkhorn'),
(343, 8, 'Emerson'),
(344, 8, 'Eriksdale'),
(345, 8, 'Flin Flon'),
(346, 8, 'Fort Alexander'),
(347, 8, 'Gillam'),
(348, 8, 'Gimli'),
(349, 8, 'Gladstone'),
(350, 8, 'Glenboro'),
(351, 8, 'Gods Lake Narrows'),
(352, 8, 'Grand Rapids'),
(353, 8, 'Grandview'),
(354, 8, 'Hamiota'),
(355, 8, 'Headingley'),
(356, 8, 'Hodgson'),
(357, 8, 'Killarney'),
(358, 8, 'La Salle'),
(359, 8, 'Lac du Bonnet'),
(360, 8, 'Lundar'),
(361, 8, 'Lynn Lake'),
(362, 8, 'Melita'),
(363, 8, 'Minnedosa'),
(364, 8, 'Morden'),
(365, 8, 'Morris'),
(366, 8, 'Neepawa'),
(367, 8, 'Nelson House'),
(368, 8, 'Niverville'),
(369, 8, 'Norway House'),
(370, 8, 'Notre Dame de Lourdes'),
(371, 8, 'Notre Dame Lourdes'),
(372, 8, 'Notre Dame Lr'),
(373, 8, 'Oakbank'),
(374, 8, 'Ochre River'),
(375, 8, 'Opaskwayak'),
(376, 8, 'Oxford House'),
(377, 8, 'Pinawa'),
(378, 8, 'Pine Falls'),
(379, 8, 'Portage La Prairie'),
(380, 8, 'Pukatawagan'),
(381, 8, 'Rivers'),
(382, 8, 'Riverton'),
(383, 8, 'Roblin'),
(384, 8, 'Rossburn'),
(385, 8, 'Russell'),
(386, 8, 'Selkirk'),
(387, 8, 'Shilo'),
(388, 8, 'Shoal Lake'),
(389, 8, 'Snow Lake'),
(390, 8, 'Somerset'),
(391, 8, 'Souris'),
(392, 8, 'South Indian Lake'),
(393, 8, 'Southport'),
(394, 8, 'Split Lake'),
(395, 8, 'St Claude'),
(396, 8, 'St Pierre Jolys'),
(397, 8, 'St. Pierre Jolys'),
(398, 8, 'Ste Anne'),
(399, 8, 'Ste Rose du Lac'),
(400, 8, 'Ste. Anne'),
(401, 8, 'Ste. Rose du Lac'),
(402, 8, 'Steinbach'),
(403, 8, 'Stonewall'),
(404, 8, 'Swan River'),
(405, 8, 'Teulon'),
(406, 8, 'The Pas'),
(407, 8, 'Thompson'),
(408, 8, 'Treherne'),
(409, 8, 'Virden'),
(410, 8, 'Vita'),
(411, 8, 'Wawanesa'),
(412, 8, 'Winkler'),
(413, 8, 'Winnipeg'),
(414, 8, 'Winnipegosis'),
(415, 8, 'York Landing'),
(416, 9, 'Ammon'),
(417, 9, 'Atholville'),
(418, 9, 'Baie Sainte Anne'),
(419, 9, 'Bas Caraquet'),
(420, 9, 'Bath'),
(421, 9, 'Bathurst'),
(422, 9, 'Belledune'),
(423, 9, 'Beresford'),
(424, 9, 'Blacks Harbour'),
(425, 9, 'Blackville'),
(426, 9, 'Bocabec'),
(427, 9, 'Boiestown'),
(428, 9, 'Bouctouche'),
(429, 9, 'Boudreau Ouest'),
(430, 9, 'Cambridge Narrows'),
(431, 9, 'Campbellton'),
(432, 9, 'Caraquet'),
(433, 9, 'Cardigan'),
(434, 9, 'Charlo'),
(435, 9, 'Chipman'),
(436, 9, 'Clair'),
(437, 9, 'Cocagne'),
(438, 9, 'Dalhousie Junction'),
(439, 9, 'Dalhousie'),
(440, 9, 'Dieppe'),
(441, 9, 'Doaktown'),
(442, 9, 'Douglas'),
(443, 9, 'Edmundston'),
(444, 9, 'Frederctn Jct'),
(445, 9, 'Fredericton'),
(446, 9, 'Fredericton Jntn'),
(447, 9, 'Gagetown'),
(448, 9, 'Gr Sault/Gr Falls'),
(449, 9, 'Grand Falls'),
(450, 9, 'Grand Manan Island'),
(451, 9, 'Grand Manan'),
(452, 9, 'Grand Bay Wesfld'),
(453, 9, 'Grnd Bay Wfld'),
(454, 9, 'Hampton'),
(455, 9, 'Hanwell'),
(456, 9, 'Hartland'),
(457, 9, 'Harvey Station'),
(458, 9, 'Kedgwick'),
(459, 9, 'Lameque'),
(460, 9, 'Lamèque'),
(461, 9, 'Memramcook'),
(462, 9, 'Minto'),
(463, 9, 'Miramichi'),
(464, 9, 'Moncton'),
(465, 9, 'Nackawic'),
(466, 9, 'Neguac'),
(467, 9, 'New Maryland'),
(468, 9, 'North Tetagouche'),
(469, 9, 'Oromocto'),
(470, 9, 'Perth Andover'),
(471, 9, 'Petitcodiac'),
(472, 9, 'Plaster Rock'),
(473, 9, 'Point La Nim'),
(474, 9, 'Pointe Verte'),
(475, 9, 'Pte Robichaud'),
(476, 9, 'Quispamsis'),
(477, 9, 'Rexton'),
(478, 9, 'Richibucto'),
(479, 9, 'Riley Brook'),
(480, 9, 'Riverside Albert'),
(481, 9, 'Riverview'),
(482, 9, 'Rogersville'),
(483, 9, 'Rothesay'),
(484, 9, 'Sackville'),
(485, 9, 'Saint George'),
(486, 9, 'Saint John'),
(487, 9, 'Saint Antoine'),
(488, 9, 'Saint Isidore'),
(489, 9, 'Saint Jacques'),
(490, 9, 'Saint Leonard'),
(491, 9, 'Saint Louis D Kent'),
(492, 9, 'Saint Quentin'),
(493, 9, 'Shediac'),
(494, 9, 'Shippagan'),
(495, 9, 'St Andrews'),
(496, 9, 'St George'),
(497, 9, 'St Martins'),
(498, 9, 'St Stephen'),
(499, 9, 'St. Stephen'),
(500, 9, 'Stanley'),
(501, 9, 'Ste Anne de Kent'),
(502, 9, 'Ste Anne Madawaska'),
(503, 9, 'Summerville'),
(504, 9, 'Sussex'),
(505, 9, 'Tracadie Sheila'),
(506, 9, 'Watervil Carleton'),
(507, 9, 'Watervill Carleton'),
(508, 9, 'Waterville'),
(509, 9, 'Welshpool'),
(510, 9, 'Woodstock'),
(511, 9, 'Woodstock Nat'),
(512, 10, 'Arnolds Cove'),
(513, 10, 'Avondale'),
(514, 10, 'Badger\'s Quay   Valleyfield   Pool\'s Island'),
(515, 10, 'Baie Verte'),
(516, 10, 'Bay Bulls'),
(517, 10, 'Bay L\'Argent'),
(518, 10, 'Bay Roberts'),
(519, 10, 'Bell Island'),
(520, 10, 'Bishops Falls'),
(521, 10, 'Bonavista'),
(522, 10, 'Botwood'),
(523, 10, 'Brookfield'),
(524, 10, 'Buchans'),
(525, 10, 'Burgeo'),
(526, 10, 'Burin Bay Arm'),
(527, 10, 'Burin'),
(528, 10, 'Carbonear'),
(529, 10, 'Channel Pab'),
(530, 10, 'Channel Port aux Basques'),
(531, 10, 'Clarenville'),
(532, 10, 'Clarkes Beach'),
(533, 10, 'Conception Bay S'),
(534, 10, 'Conception Bay South'),
(535, 10, 'Conception Bay S'),
(536, 10, 'Corner Brook'),
(537, 10, 'Cow Head'),
(538, 10, 'Coxs Cove'),
(539, 10, 'Deer Lake'),
(540, 10, 'Flowers Cove'),
(541, 10, 'Fogo Island'),
(542, 10, 'Fogo'),
(543, 10, 'Forteau'),
(544, 10, 'Gambo'),
(545, 10, 'Gander'),
(546, 10, 'Glovertown'),
(547, 10, 'Goose Bay'),
(548, 10, 'Goulds'),
(549, 10, 'Grand Bank'),
(550, 10, 'Grand Falls Windsor'),
(551, 10, 'Grand Falls Windsor'),
(552, 10, 'Grnd Falls Wi'),
(553, 10, 'Grnd Falls Windsor'),
(554, 10, 'Hampden'),
(555, 10, 'Happy Valley   Goose Bay'),
(556, 10, 'Happy Valley Goose'),
(557, 10, 'Harbour Breton'),
(558, 10, 'Harbour Grace'),
(559, 10, 'Harbour Main '),
(560, 10, 'Hermitage'),
(561, 10, 'Holyrood'),
(562, 10, 'Labrador City'),
(563, 10, 'Lewisporte'),
(564, 10, 'Lourdes'),
(565, 10, 'Marys Harbour'),
(566, 10, 'Marystown'),
(567, 10, 'Mount Pearl'),
(568, 10, 'Norris Point'),
(569, 10, 'Old Perlican'),
(570, 10, 'Paradise'),
(571, 10, 'Pasadena'),
(572, 10, 'Placentia'),
(573, 10, 'Pollards Point'),
(574, 10, 'Port au Choix'),
(575, 10, 'Port Blandford'),
(576, 10, 'Port Cv St Phil'),
(577, 10, 'Port Saunders'),
(578, 10, 'Port aux Basques'),
(579, 10, 'Portugal Cove St. Philip\'s'),
(580, 10, 'Roddickton '),
(581, 10, 'Roddickton Bide Arm'),
(582, 10, 'South River'),
(583, 10, 'Spaniards Bay'),
(584, 10, 'Springdale'),
(585, 10, 'St Albans'),
(586, 10, 'St Anthony'),
(587, 10, 'St Lawrence'),
(588, 10, 'St Marys'),
(589, 10, 'St. Alban\'s'),
(590, 10, 'St. Anthony'),
(591, 10, 'St. John\'s'),
(592, 10, 'St. Lawrence'),
(593, 10, 'Stephenville'),
(594, 10, 'Stephenville Cross'),
(595, 10, 'Torbay'),
(596, 10, 'Trepassey'),
(597, 10, 'Twillingate'),
(598, 10, 'Upper Island Cove'),
(599, 10, 'Wareham Ctvle'),
(600, 10, 'Western Bay'),
(601, 10, 'Whitbourne'),
(602, 10, 'Winterton'),
(603, 6, 'Amherst'),
(604, 6, 'Annapolis Royal'),
(605, 6, 'Antigonish'),
(606, 6, 'Arichat'),
(607, 6, 'Aylesford'),
(608, 6, 'Baddeck'),
(609, 6, 'Barrington Passage'),
(610, 6, 'Bass River'),
(611, 6, 'Bear River'),
(612, 6, 'Beaver Bank'),
(613, 6, 'Bedford'),
(614, 6, 'Berwick'),
(615, 6, 'Blockhouse'),
(616, 6, 'Bras d\'Or'),
(617, 6, 'Bridgetown'),
(618, 6, 'Bridgewater'),
(619, 6, 'Brookfield'),
(620, 6, 'Caledonia'),
(621, 6, 'Canning'),
(622, 6, 'Canso'),
(623, 6, 'Centreville (Kings County)'),
(624, 6, 'Chester Basin'),
(625, 6, 'Chester'),
(626, 6, 'Cheticamp'),
(627, 6, 'Clarks Harbour'),
(628, 6, 'Cleveland'),
(629, 6, 'Dartmouth'),
(630, 6, 'Digby'),
(631, 6, 'Eastern Passage'),
(632, 6, 'Elmsdale'),
(633, 6, 'Eskasoni'),
(634, 6, 'Fall River'),
(635, 6, 'Glace Bay'),
(636, 6, 'Glenwood'),
(637, 6, 'Greenwood'),
(638, 6, 'Guysborough'),
(639, 6, 'Halifax'),
(640, 6, 'Hammonds Plains'),
(641, 6, 'Hantsport'),
(642, 6, 'Hatchet Lake'),
(643, 6, 'Herring Cove'),
(644, 6, 'Hubbards'),
(645, 6, 'Inverness'),
(646, 6, 'Kennetcook'),
(647, 6, 'Kentville'),
(648, 6, 'Kingston'),
(649, 6, 'L\'Ardoise'),
(650, 6, 'Lakeside'),
(651, 6, 'Lawrencetown'),
(652, 6, 'Liverpool'),
(653, 6, 'Louisbourg'),
(654, 6, 'Lower Sackville'),
(655, 6, 'Lunenburg'),
(656, 6, 'Mahone Bay'),
(657, 6, 'Md Musquodbt'),
(658, 6, 'Meteghan Centre'),
(659, 6, 'Micmac'),
(660, 6, 'Middle Musquodoboit'),
(661, 6, 'Middleton'),
(662, 6, 'Midle Musquodoboit'),
(663, 6, 'Mineville'),
(664, 6, 'Mira Road'),
(665, 6, 'Mount Uniacke'),
(666, 6, 'Musquodbt Hbr'),
(667, 6, 'Musquodoboit Harbr'),
(668, 6, 'Musquodoboit Harbr'),
(669, 6, 'Neils Harbour'),
(670, 6, 'New Germany'),
(671, 6, 'New Glasgow'),
(672, 6, 'New Minas'),
(673, 6, 'New Waterford'),
(674, 6, 'Newport'),
(675, 6, 'North Preston'),
(676, 6, 'North Sydney'),
(677, 6, 'Oxford'),
(678, 6, 'Parrsboro'),
(679, 6, 'Pictou'),
(680, 6, 'Port Hawkesbury'),
(681, 6, 'Port Williams'),
(682, 6, 'Porters Lake'),
(683, 6, 'Pubnico'),
(684, 6, 'Pugwash'),
(685, 6, 'Saulnierville'),
(686, 6, 'Shearwater'),
(687, 6, 'Sheet Harbour'),
(688, 6, 'Shelburne'),
(689, 6, 'Sherbrooke'),
(690, 6, 'Shubenacadie'),
(691, 6, 'Springhill'),
(692, 6, 'St Peters'),
(693, 6, 'Stellarton'),
(694, 6, 'Stewiacke'),
(695, 6, 'Sydney Mines'),
(696, 6, 'Sydney'),
(697, 6, 'Tantallon'),
(698, 6, 'Tatamagouche'),
(699, 6, 'Timberlea'),
(700, 6, 'Trenton'),
(701, 6, 'Truro'),
(702, 6, 'Upper Tantallon'),
(703, 6, 'Wagmatcook'),
(704, 6, 'Westville'),
(705, 6, 'Weymouth'),
(706, 6, 'Windsor'),
(707, 6, 'Wolfville'),
(708, 6, 'Yarmouth'),
(709, 12, 'Fort Smith'),
(710, 12, 'Hay River'),
(711, 12, 'Inuvik'),
(712, 12, 'Norman Wells'),
(713, 12, 'Yellowknife'),
(714, 13, 'Chesterfield Inlet'),
(715, 13, 'Iqaluit'),
(716, 13, 'Rankin Inlet'),
(717, 2, 'Acton'),
(718, 2, 'Ailsa Craig'),
(719, 2, 'Ajax'),
(720, 2, 'Alban'),
(721, 2, 'Alexandria'),
(722, 2, 'Alfred'),
(723, 2, 'Alliston'),
(724, 2, 'Almonte'),
(725, 2, 'Amherstburg'),
(726, 2, 'Amherstview'),
(727, 2, 'Ancaster'),
(728, 2, 'Angus'),
(729, 2, 'Annan'),
(730, 2, 'Apsley'),
(731, 2, 'Arkona'),
(732, 2, 'Arnprior'),
(733, 2, 'Arthur'),
(734, 2, 'Arva'),
(735, 2, 'Astorville'),
(736, 2, 'Astra'),
(737, 2, 'Athens'),
(738, 2, 'Atikokan'),
(739, 2, 'Aurora'),
(740, 2, 'Avonmore'),
(741, 2, 'Aylmer'),
(742, 2, 'Ayr'),
(743, 2, 'Ayton'),
(744, 2, 'Azilda'),
(745, 2, 'Bala'),
(746, 2, 'Balderson'),
(747, 2, 'Bancroft'),
(748, 2, 'Barrie'),
(749, 2, 'Barry\'s Bay'),
(750, 2, 'Barrys Bay'),
(751, 2, 'Bath'),
(752, 2, 'Bayfield'),
(753, 2, 'Beachburg'),
(754, 2, 'Beamsville'),
(755, 2, 'Beaverton'),
(756, 2, 'Belle River'),
(757, 2, 'Belleville'),
(758, 2, 'Binbrook'),
(759, 2, 'Blenheim'),
(760, 2, 'Blind River'),
(761, 2, 'Bobcaygeon'),
(762, 2, 'Bolton'),
(763, 2, 'Bonfield'),
(764, 2, 'Borden'),
(765, 2, 'Bourget'),
(766, 2, 'Bowmanville'),
(767, 2, 'Bracebridge'),
(768, 2, 'Bradford'),
(769, 2, 'Brampton'),
(770, 2, 'Brantford'),
(771, 2, 'Brechin'),
(772, 2, 'Breslau'),
(773, 2, 'Bridgenorth'),
(774, 2, 'Brighton'),
(775, 2, 'Britt'),
(776, 2, 'Brockville'),
(777, 2, 'Bruce Mines'),
(778, 2, 'Buckhorn'),
(779, 2, 'Burford'),
(780, 2, 'Burk\'s Falls'),
(781, 2, 'Burks Falls'),
(782, 2, 'Burlington'),
(783, 2, 'Calabogie'),
(784, 2, 'Caledon East'),
(785, 2, 'Caledon Village'),
(786, 2, 'Caledonia'),
(787, 2, 'Calgary'),
(788, 2, 'Callander'),
(789, 2, 'Cambridge'),
(790, 2, 'Campbellford'),
(791, 2, 'Campbellville'),
(792, 2, 'Cannington'),
(793, 2, 'Capreol'),
(794, 2, 'Carleton Place'),
(795, 2, 'Carlisle'),
(796, 2, 'Carp'),
(797, 2, 'Casselman'),
(798, 2, 'Cavan Monaghan'),
(799, 2, 'Cayuga'),
(800, 2, 'Chapleau'),
(801, 2, 'Chatham'),
(802, 2, 'Chelmsford'),
(803, 2, 'Chesley'),
(804, 2, 'Clarksburg'),
(805, 2, 'Clifford'),
(806, 2, 'Clinton'),
(807, 2, 'Cobalt'),
(808, 2, 'Cobden'),
(809, 2, 'Coboconk'),
(810, 2, 'Cobourg'),
(811, 2, 'Cochrane'),
(812, 2, 'Coe Hill'),
(813, 2, 'Colborne'),
(814, 2, 'Coldwater'),
(815, 2, 'Collingwood'),
(816, 2, 'Comber'),
(817, 2, 'Concord'),
(818, 2, 'Conestogo'),
(819, 2, 'Coniston'),
(820, 2, 'Copper Cliff'),
(821, 2, 'Cornwall'),
(822, 2, 'Corunna'),
(823, 2, 'Courtice'),
(824, 2, 'Courtright'),
(825, 2, 'Creemore'),
(826, 2, 'Crysler'),
(827, 2, 'Cutler'),
(828, 2, 'Deep River'),
(829, 2, 'Delhi'),
(830, 2, 'Delta'),
(831, 2, 'Deseronto'),
(832, 2, 'Dorchester'),
(833, 2, 'Douro Dummer'),
(834, 2, 'Drayton'),
(835, 2, 'Dresden'),
(836, 2, 'Dryden'),
(837, 2, 'Dunchurch'),
(838, 2, 'Dundalk'),
(839, 2, 'Dundas'),
(840, 2, 'Dunnville'),
(841, 2, 'Dunrobin'),
(842, 2, 'Duntroon'),
(843, 2, 'Durham'),
(844, 2, 'Dutton'),
(845, 2, 'Dwight'),
(846, 2, 'Eabamet Lake'),
(847, 2, 'Ear Falls'),
(848, 2, 'Earlton'),
(849, 2, 'East Gwillimbury'),
(850, 2, 'East York'),
(851, 2, 'Eganville'),
(852, 2, 'Egbert'),
(853, 2, 'Elizabethtown'),
(854, 2, 'Elliot Lake'),
(855, 2, 'Elmira'),
(856, 2, 'Elmvale'),
(857, 2, 'Elora'),
(858, 2, 'Embrun'),
(859, 2, 'Emo'),
(860, 2, 'Emsdale'),
(861, 2, 'Englehart'),
(862, 2, 'Erin'),
(863, 2, 'Espanola'),
(864, 2, 'Essex'),
(865, 2, 'Etobicoke'),
(866, 2, 'Exeter'),
(867, 2, 'Fenelon Falls'),
(868, 2, 'Fenwick'),
(869, 2, 'Fergus'),
(870, 2, 'Fisherville'),
(871, 2, 'Flesherton'),
(872, 2, 'Foleyet'),
(873, 2, 'Fonthill'),
(874, 2, 'Forest'),
(875, 2, 'Fort Erie'),
(876, 2, 'Fort Frances'),
(877, 2, 'Gananoque'),
(878, 2, 'Garson'),
(879, 2, 'Georgetown'),
(880, 2, 'Geraldton'),
(881, 2, 'Glenburnie'),
(882, 2, 'Gloucester'),
(883, 2, 'Goderich'),
(884, 2, 'Gogama'),
(885, 2, 'Golden Lake'),
(886, 2, 'Gore Bay'),
(887, 2, '<option value=Grand Bend\"'),
(888, 2, 'Grand Valley'),
(889, 2, 'Gravenhurst'),
(890, 2, 'Greely'),
(891, 2, 'Green Valley'),
(892, 2, 'Grimsby'),
(893, 2, 'Guelph'),
(894, 2, 'Hagersville'),
(895, 2, 'Haileybury'),
(896, 2, 'Haliburton'),
(897, 2, 'Halifax'),
(898, 2, 'Hamilton'),
(899, 2, 'Hanmer'),
(900, 2, 'Hannon'),
(901, 2, 'Hanover'),
(902, 2, 'Harriston'),
(903, 2, 'Harrow'),
(904, 2, 'Hastings'),
(905, 2, 'Hawkesbury'),
(906, 2, 'Hearst'),
(907, 2, 'Hornell Heights'),
(908, 2, 'Hornepayne'),
(909, 2, 'Huntsville'),
(910, 2, 'Ignace'),
(911, 2, 'Ilderton'),
(912, 2, 'Ingersoll'),
(913, 2, 'Ingleside'),
(914, 2, 'Innisfil'),
(915, 2, 'Iroquois Falls'),
(916, 2, 'Jarvis'),
(917, 2, 'Jordan Station'),
(918, 2, 'Kanata'),
(919, 2, 'Kapuskasing'),
(920, 2, 'Keewatin'),
(921, 2, 'Kemptville'),
(922, 2, 'Kenora'),
(923, 2, 'Keswick'),
(924, 2, 'Killaloe'),
(925, 2, 'Kincardine'),
(926, 2, 'King City'),
(927, 2, 'Kingston'),
(928, 2, 'Kingsville'),
(929, 2, 'Kinmount'),
(930, 2, 'Kirkfield'),
(931, 2, 'Kirkland Lake'),
(932, 2, 'Kitchener'),
(933, 2, 'Kleinburg'),
(934, 2, 'Komoka'),
(935, 2, 'La Salle'),
(936, 2, 'Lakefield'),
(937, 2, 'Lambton Shores'),
(938, 2, 'Lanark'),
(939, 2, 'Lancaster'),
(940, 2, 'Lansdowne'),
(941, 2, 'Larder Lake'),
(942, 2, 'Latchford'),
(943, 2, 'Leamington'),
(944, 2, 'Levack'),
(945, 2, 'Lindsay'),
(946, 2, 'Lions Head'),
(947, 2, 'Lisle'),
(948, 2, 'Listowel'),
(949, 2, 'Little Current'),
(950, 2, 'Lively'),
(951, 2, 'London'),
(952, 2, 'Long Sault'),
(953, 2, 'Longlac'),
(954, 2, 'Lucan'),
(955, 2, 'Lucknow'),
(956, 2, 'Lynden'),
(957, 2, 'Madoc'),
(958, 2, 'Malton'),
(959, 2, 'Manitouwadge'),
(960, 2, 'Manitowaning'),
(961, 2, 'Manotick'),
(962, 2, 'Maple'),
(963, 2, 'Marathon'),
(964, 2, 'Markdale'),
(965, 2, 'Markham'),
(966, 2, 'Marmora'),
(967, 2, 'Massey'),
(968, 2, 'Matheson'),
(969, 2, 'Mattawa'),
(970, 2, 'Mattice'),
(971, 2, 'Meaford'),
(972, 2, 'Merrickville'),
(973, 2, 'Metcalfe'),
(974, 2, 'Midhurst'),
(975, 2, 'Midland'),
(976, 2, 'Mildmay'),
(977, 2, 'Millbrook'),
(978, 2, 'Milton'),
(979, 2, 'Milverton'),
(980, 2, 'Mindemoya'),
(981, 2, 'Minden'),
(982, 2, 'Mississauga'),
(983, 2, 'Mitchell'),
(984, 2, 'Mono'),
(985, 2, 'Moose Creek'),
(986, 2, 'Moose Factory'),
(987, 2, 'Morrisburg'),
(988, 2, 'Mount Albert'),
(989, 2, 'Mount Brydges'),
(990, 2, 'Mount Forest'),
(991, 2, 'Mount Hope'),
(992, 2, 'Muncey'),
(993, 2, 'Nanticoke'),
(994, 2, 'Napanee'),
(995, 2, 'Naughton'),
(996, 2, 'Nepean'),
(997, 2, 'New Hamburg'),
(998, 2, 'New Liskeard'),
(999, 2, 'Newboro'),
(1000, 2, 'Newburgh'),
(1001, 2, 'Newbury'),
(1002, 2, 'Newcastle'),
(1003, 2, 'Newmarket'),
(1004, 2, 'Niagara Falls'),
(1005, 2, 'Niagara Lk'),
(1006, 2, 'Niagara On The Lake'),
(1007, 2, 'Niagara On The Lke'),
(1008, 2, 'Nipigon'),
(1009, 2, 'Nobleton'),
(1010, 2, 'Noelville'),
(1011, 2, 'North Bay'),
(1012, 2, 'North York'),
(1013, 2, 'Northbrook'),
(1014, 2, 'Norwich'),
(1015, 2, 'Norwood'),
(1016, 2, 'Nottawa'),
(1017, 2, 'Oakville'),
(1018, 2, 'Ohsweken'),
(1019, 2, 'Omemee'),
(1020, 2, 'Orangeville'),
(1021, 2, 'Orillia'),
(1022, 2, 'Orleans'),
(1023, 2, 'Orléans'),
(1024, 2, 'Oro Medonte'),
(1025, 2, 'Osgoode'),
(1026, 2, 'Oshawa'),
(1027, 2, 'Ottawa'),
(1028, 2, 'Owen Sound'),
(1029, 2, 'Pakenham'),
(1030, 2, 'Palmerston'),
(1031, 2, 'Paris'),
(1032, 2, 'Parkhill'),
(1033, 2, 'Parry Sound'),
(1034, 2, 'Pefferlaw'),
(1035, 2, 'Pembroke'),
(1036, 2, 'Penetanguishene'),
(1037, 2, 'Perth'),
(1038, 2, 'Petawawa'),
(1039, 2, 'Peterborough'),
(1040, 2, 'Petrolia'),
(1041, 2, 'Pickering'),
(1042, 2, 'Pickle Lake'),
(1043, 2, 'Picton'),
(1044, 2, 'Pikangikum'),
(1045, 2, 'Plantagenet'),
(1046, 2, 'Point Edward'),
(1047, 2, 'Port Carling'),
(1048, 2, 'Port Colborne'),
(1049, 2, 'Port Dover'),
(1050, 2, 'Port Elgin'),
(1051, 2, 'Port Hope'),
(1052, 2, 'Port McNicoll'),
(1053, 2, 'Port Perry'),
(1054, 2, 'Port Rowan'),
(1055, 2, 'Port Stanley'),
(1056, 2, 'Portland'),
(1057, 2, 'Powassan'),
(1058, 2, 'Prescott'),
(1059, 2, 'Queen Charlotte'),
(1060, 2, 'Rainy River'),
(1061, 2, 'Red Lake'),
(1062, 2, 'Renfrew'),
(1063, 2, 'Richards Landing'),
(1064, 2, 'Richmond Hill'),
(1065, 2, 'Richmond'),
(1066, 2, 'Ridgetown'),
(1067, 2, 'Ridgeway'),
(1068, 2, 'Rockland'),
(1069, 2, 'Rockwood'),
(1070, 2, 'Russell'),
(1071, 2, 'Sandy Lake'),
(1072, 2, 'Sarnia'),
(1073, 2, 'Sauble Beach'),
(1074, 2, 'Sault Ste Marie'),
(1075, 2, 'Sault Ste. Marie'),
(1076, 2, 'Scarborough'),
(1077, 2, 'Schomberg'),
(1078, 2, 'Schreiber'),
(1079, 2, 'Seaforth'),
(1080, 2, 'Seeley\'s Bay'),
(1081, 2, 'Seeleys Bay'),
(1082, 2, 'Selwyn'),
(1083, 2, 'Severn'),
(1084, 2, 'Sharbot Lake'),
(1085, 2, 'Sharon'),
(1086, 2, 'Shedden'),
(1087, 2, 'Shelburne'),
(1088, 2, 'Simcoe'),
(1089, 2, 'Sioux Lookout'),
(1090, 2, 'Smiths Falls'),
(1091, 2, 'Smithville'),
(1092, 2, 'Smooth Rock Falls'),
(1093, 2, 'South Porcupine'),
(1094, 2, 'South River'),
(1095, 2, 'Southampton'),
(1096, 2, 'Spanish'),
(1097, 2, 'Spencerville'),
(1098, 2, 'Springwater'),
(1099, 2, 'St Catharines'),
(1100, 2, 'St Charles'),
(1101, 2, 'St Eugene'),
(1102, 2, 'St George Brant'),
(1103, 2, 'St Isidore'),
(1104, 2, 'St Jacobs'),
(1105, 2, 'St Marys'),
(1106, 2, 'St Thomas'),
(1107, 2, 'St. Catharines'),
(1108, 2, 'St. Charles'),
(1109, 2, 'St. Isidore'),
(1110, 2, 'St. Jacobs'),
(1111, 2, 'St. Thomas'),
(1112, 2, 'Stayner'),
(1113, 2, 'Stirling'),
(1114, 2, 'Stittsville'),
(1115, 2, 'Stoney Creek'),
(1116, 2, 'Stouffville'),
(1117, 2, 'Stratford'),
(1118, 2, 'Strathroy'),
(1119, 2, 'Sturgeon Falls'),
(1120, 2, 'Sudbury'),
(1121, 2, 'Summerside'),
(1122, 2, 'Sunderland'),
(1123, 2, 'Sundridge'),
(1124, 2, 'Sutton West'),
(1125, 2, 'Sydenham'),
(1126, 2, 'Tamworth'),
(1127, 2, 'Tavistock'),
(1128, 2, 'Tecumseh'),
(1129, 2, 'Teeswater'),
(1130, 2, 'Temagami'),
(1131, 2, 'Terrace Bay'),
(1132, 2, 'Thamesford'),
(1133, 2, 'Thamesville'),
(1134, 2, 'Thedford'),
(1135, 2, 'Thessalon'),
(1136, 2, 'Thornbury'),
(1137, 2, 'Thorndale'),
(1138, 2, 'Thornhill'),
(1139, 2, 'Thorold'),
(1140, 2, 'Thunder Bay'),
(1141, 2, 'Tilbury'),
(1142, 2, 'Tillsonburg'),
(1143, 2, 'Timmins'),
(1144, 2, 'Tiny'),
(1145, 2, 'Tobermory'),
(1146, 2, 'Toronto'),
(1147, 2, 'Tottenham'),
(1148, 2, 'Trenton'),
(1149, 2, 'Trout Creek'),
(1150, 2, 'Tweed'),
(1151, 2, 'Unionville'),
(1152, 2, 'Uxbridge'),
(1153, 2, 'Val Caron'),
(1154, 2, 'Vancouver'),
(1155, 2, 'Vanier'),
(1156, 2, 'Vankleek Hill'),
(1157, 2, 'Vaughan'),
(1158, 2, 'Vermilion Bay'),
(1159, 2, 'Verner'),
(1160, 2, 'Verona'),
(1161, 2, 'Victoria Harbour'),
(1162, 2, 'Vineland '),
(1163, 2, 'Virgil'),
(1164, 2, 'Virginiatown'),
(1165, 2, 'Walkerton'),
(1166, 2, 'Wallaceburg'),
(1167, 2, 'Warkworth'),
(1168, 2, 'Warren'),
(1169, 2, 'Wasaga Beach'),
(1170, 2, 'Waterdown'),
(1171, 2, 'Waterford'),
(1172, 2, 'Waterloo'),
(1173, 2, 'Wawa'),
(1174, 2, 'Welland McMaster FHT'),
(1175, 2, 'Welland'),
(1176, 2, 'Wellesley'),
(1177, 2, 'Wellington'),
(1178, 2, 'West Lorne'),
(1179, 2, 'Westport'),
(1180, 2, 'Wheatley'),
(1181, 2, 'Whitby'),
(1182, 2, 'White River'),
(1183, 2, 'Whitney'),
(1184, 2, 'Wiarton'),
(1185, 2, 'Winchester'),
(1186, 2, 'Windsor'),
(1187, 2, 'Wingham'),
(1188, 2, 'Woodbridge'),
(1189, 2, 'Woodstock'),
(1190, 2, 'Woodville'),
(1191, 2, 'Yarker'),
(1192, 2, 'York'),
(1193, 2, 'Zurich'),
(1194, 11, 'Alberton'),
(1195, 11, 'Bedeque'),
(1196, 11, 'Cardigan'),
(1197, 11, 'Charlottetown'),
(1198, 11, 'Cornwall'),
(1199, 11, 'Crapaud'),
(1200, 11, 'Hunter River'),
(1201, 11, 'Kensington'),
(1202, 11, 'Montague'),
(1203, 11, 'North Rustico'),
(1204, 11, 'O\'Leary'),
(1205, 11, 'Souris'),
(1206, 11, 'Stratford'),
(1207, 11, 'Summerside'),
(1208, 11, 'Tignish'),
(1209, 11, 'Tyne Valley'),
(1210, 11, 'Vernon Bridge'),
(1211, 4, 'Acton Vale'),
(1212, 4, 'Akwesasne'),
(1213, 4, 'Alma'),
(1214, 4, 'Alouette'),
(1215, 4, 'Amos'),
(1216, 4, 'Amqui'),
(1217, 4, 'Ange Gardien'),
(1218, 4, 'Anjou'),
(1219, 4, 'Armagh'),
(1220, 4, 'Asbestos'),
(1221, 4, 'Baie Comeau'),
(1222, 4, 'Baie D\'Urfe'),
(1223, 4, 'Baie D\'Urfé'),
(1224, 4, 'Baie du Poste'),
(1225, 4, 'Baie Saint Paul'),
(1226, 4, 'Bassin'),
(1227, 4, 'Beaconsfield'),
(1228, 4, 'Beauceville'),
(1229, 4, 'Beauharnois'),
(1230, 4, 'Beaupré'),
(1231, 4, 'Becancour'),
(1232, 4, 'Bécancour'),
(1233, 4, 'Bedford'),
(1234, 4, 'Beloeil'),
(1235, 4, 'Berthierville'),
(1236, 4, 'Blainville'),
(1237, 4, 'Bois des Filion'),
(1238, 4, 'Boisbriand'),
(1239, 4, 'Bonaventure'),
(1240, 4, 'Boucherville'),
(1241, 4, 'Bouchervulle'),
(1242, 4, 'Bromont'),
(1243, 4, 'Brossard'),
(1244, 4, 'Buckingham'),
(1245, 4, 'Cacouna'),
(1246, 4, 'Campbell\'s Bay'),
(1247, 4, 'Candiac'),
(1248, 4, 'Canton De Hatley'),
(1249, 4, 'Cap aux Meules'),
(1250, 4, 'Cap Chat'),
(1251, 4, 'Cap Saint Ignace'),
(1252, 4, 'Cap Santé'),
(1253, 4, 'Caplan'),
(1254, 4, 'Carignan'),
(1255, 4, 'Carleton'),
(1256, 4, 'Chambly'),
(1257, 4, 'Chambord'),
(1258, 4, 'Chandler'),
(1259, 4, 'Chapais'),
(1260, 4, 'Charlemagne'),
(1261, 4, 'Charny'),
(1262, 4, 'Chateauguay'),
(1263, 4, 'Châteauguay'),
(1264, 4, 'Chelsea'),
(1265, 4, 'Chertsey'),
(1266, 4, 'Chibougamau'),
(1267, 4, 'Chicoutimi'),
(1268, 4, 'Chisasibi'),
(1269, 4, 'Clermont'),
(1270, 4, 'Coaticook'),
(1271, 4, 'Contrecoeur'),
(1272, 4, 'Cookshire'),
(1273, 4, 'Cookshire Eaton'),
(1274, 4, 'Cote Saint Luc'),
(1275, 4, 'Côte Saint Luc'),
(1276, 4, 'Courcelette'),
(1277, 4, 'Courcelles'),
(1278, 4, 'Cowansville'),
(1279, 4, 'Danville'),
(1280, 4, 'Daveluyville'),
(1281, 4, 'Degelis'),
(1282, 4, 'Dégelis'),
(1283, 4, 'Delson'),
(1284, 4, 'Deschambault'),
(1285, 4, 'Deux Montagnes'),
(1286, 4, 'Disraeli'),
(1287, 4, 'Disraéli'),
(1288, 4, 'Dolbeau Mistassini'),
(1289, 4, 'Dollard D Ormeaux'),
(1290, 4, 'Dollard des Ormeaux'),
(1291, 4, 'Donnacona'),
(1292, 4, 'Dorval'),
(1293, 4, 'Drummondville'),
(1294, 4, 'Duhamel Ouest'),
(1295, 4, 'East Angus'),
(1296, 4, 'Eastman'),
(1297, 4, 'Essipit'),
(1298, 4, 'Fabreville'),
(1299, 4, 'Farnham'),
(1300, 4, 'Ferme Neuve'),
(1301, 4, 'Fermont'),
(1302, 4, 'Forestville'),
(1303, 4, 'Fort Coulonge'),
(1304, 4, 'Fortierville'),
(1305, 4, 'Foster'),
(1306, 4, 'Gaspe'),
(1307, 4, 'Gaspé'),
(1308, 4, 'Gatineau'),
(1309, 4, 'Gracefield'),
(1310, 4, 'Granby'),
(1311, 4, 'Grand Mère'),
(1312, 4, 'Grand Mere'),
(1313, 4, 'Grand Mère'),
(1314, 4, 'Grande Riviere'),
(1315, 4, 'Grande Rivière'),
(1316, 4, 'Grande Vallee'),
(1317, 4, 'Grande Vallée'),
(1318, 4, 'Grdes Bergeronnes'),
(1319, 4, 'Greenfield Park'),
(1320, 4, 'Ham Nord'),
(1321, 4, 'Hampstead'),
(1322, 4, 'Havre Saint Pierre'),
(1323, 4, 'Hébertville'),
(1324, 4, 'Henryville'),
(1325, 4, 'Huberdeau'),
(1326, 4, 'Hudson'),
(1327, 4, 'Huntingdon'),
(1328, 4, 'Hvre Saint Pierre'),
(1329, 4, 'Inukjuak'),
(1330, 4, 'Joliette'),
(1331, 4, 'Jonquiere'),
(1332, 4, 'Jonquière'),
(1333, 4, 'Kahnawake'),
(1334, 4, 'Kangirsuk'),
(1335, 4, 'Kawawachikamach'),
(1336, 4, 'Kingsey Falls'),
(1337, 4, 'Kirkland'),
(1338, 4, 'Knowlton'),
(1339, 4, 'Kuujjuaq'),
(1340, 4, 'L\'Ancienne Lorette'),
(1341, 4, 'L\'Anse Saint Jean'),
(1342, 4, 'L\'Assomption'),
(1343, 4, 'L\'Epiphanie'),
(1344, 4, 'L\'Ile Bizard'),
(1345, 4, 'L\'Ile Perrot'),
(1346, 4, 'L\'Isletville'),
(1347, 4, 'La Baie'),
(1348, 4, 'La Baleine'),
(1349, 4, 'La Guadeloupe'),
(1350, 4, 'La Malbaie'),
(1351, 4, 'La Patrie'),
(1352, 4, 'La Pocatiere'),
(1353, 4, 'La Pocatière'),
(1354, 4, 'La Prairie'),
(1355, 4, 'La Sarre'),
(1356, 4, 'La Tuque'),
(1357, 4, 'Labelle'),
(1358, 4, 'Lac Beauport'),
(1359, 4, 'Lac Des Aigles'),
(1360, 4, 'Lac Drolet'),
(1361, 4, 'Lac Etchemin'),
(1362, 4, 'Lac Megantic'),
(1363, 4, 'Lac Mégantic'),
(1364, 4, 'Lachenaie'),
(1365, 4, 'Lachine'),
(1366, 4, 'Lachute'),
(1367, 4, 'Lasalle'),
(1368, 4, 'Laurier Station'),
(1369, 4, 'Laval'),
(1370, 4, 'Lavaltrie'),
(1371, 4, 'Lebel s Quevillon'),
(1372, 4, 'Lebel s Quévillon'),
(1373, 4, 'Lemoyne'),
(1374, 4, 'Les Cèdres'),
(1375, 4, 'Les Eboulements'),
(1376, 4, 'Les Escoumins'),
(1377, 4, 'Lévis'),
(1378, 4, 'Longueuil'),
(1379, 4, 'Lorraine'),
(1380, 4, '<option value=Louiseville\"'),
(1381, 4, 'Lourdes d Bl Sabl'),
(1382, 4, 'Lyster'),
(1383, 4, 'M St Hilaire'),
(1384, 4, 'Magog'),
(1385, 4, 'Malartic'),
(1386, 4, 'Maniwaki'),
(1387, 4, 'Mansfield'),
(1388, 4, 'Mansonville'),
(1389, 4, 'Maria'),
(1390, 4, 'Marieville'),
(1391, 4, 'Mascouche'),
(1392, 4, 'Mashteuiatsh'),
(1393, 4, 'Maskinongé'),
(1394, 4, 'Matagami'),
(1395, 4, 'Matane'),
(1396, 4, 'Matapedia'),
(1397, 4, 'Matapédia'),
(1398, 4, 'McMasterville'),
(1399, 4, 'Mercier'),
(1400, 4, 'Metab L A La Croix'),
(1401, 4, 'Métab L à la Croix'),
(1402, 4, 'Mirabel'),
(1403, 4, 'Mistissini'),
(1404, 4, 'Mont Saint Hilaire'),
(1405, 4, 'Mont Joli'),
(1406, 4, 'Mont Laurier'),
(1407, 4, 'Mont Royal'),
(1408, 4, 'Mont Saint Hilaire'),
(1409, 4, 'Mont Tremblant'),
(1410, 4, 'Montmagny'),
(1411, 4, 'Montpellier'),
(1412, 4, 'Montréal'),
(1413, 4, 'Montréal Est'),
(1414, 4, 'Montreal Nord'),
(1415, 4, 'Montréal Nord'),
(1416, 4, 'Montreal Ouest'),
(1417, 4, 'Montréal Ouest'),
(1418, 4, 'Morin Heights'),
(1419, 4, 'Murdochville'),
(1420, 4, 'N D Des Prairies'),
(1421, 4, 'N D Des Prairies'),
(1422, 4, 'Napierville'),
(1423, 4, 'Nemiscau'),
(1424, 4, 'Neuville'),
(1425, 4, 'New Richmond'),
(1426, 4, 'Nicolet'),
(1427, 4, 'Normandin'),
(1428, 4, 'North Hatley'),
(1429, 4, 'Notre Dame du Portage'),
(1430, 4, 'Oka'),
(1431, 4, 'Ormstown'),
(1432, 4, 'Ottawa'),
(1433, 4, 'Otter Lake'),
(1434, 4, 'Otterburn Park'),
(1435, 4, 'Outremont'),
(1436, 4, 'Packington'),
(1437, 4, 'Papineauville'),
(1438, 4, 'Paspebiac'),
(1439, 4, 'Paspébiac'),
(1440, 4, 'Perce'),
(1441, 4, 'Percé'),
(1442, 4, 'Pierrefonds'),
(1443, 4, 'Pierreville'),
(1444, 4, 'Pincourt'),
(1445, 4, 'Plaisance'),
(1446, 4, 'Plessisville'),
(1447, 4, 'Pohénégamook'),
(1448, 4, 'Pointe à la Croix'),
(1449, 4, 'Pointe aux Trembles'),
(1450, 4, 'Pointe Claire'),
(1451, 4, 'Pont Rouge'),
(1452, 4, 'Port Cartier'),
(1453, 4, 'Prévost'),
(1454, 4, 'Princeville'),
(1455, 4, 'Puvirnituq'),
(1456, 4, 'Québec'),
(1457, 4, 'Quyon'),
(1458, 4, 'Radisson'),
(1459, 4, 'Rawdon'),
(1460, 4, 'Repentigny'),
(1461, 4, 'Richelieu'),
(1462, 4, 'Richmond'),
(1463, 4, 'Rigaud'),
(1464, 4, 'Rimouski'),
(1465, 4, 'Ripon'),
(1466, 4, 'Rivière Bleue'),
(1467, 4, 'Riviere du Loup'),
(1468, 4, 'Rivière du Loup'),
(1469, 4, 'Rivière Rouge'),
(1470, 4, 'Roberval'),
(1471, 4, 'Rollet'),
(1472, 4, 'Rosemere'),
(1473, 4, 'Rosemère'),
(1474, 4, 'Rougemont'),
(1475, 4, 'Rouyn Noranda'),
(1476, 4, 'Roxboro'),
(1477, 4, 'Roxton Pond'),
(1478, 4, 'Sacré C Saguenay'),
(1479, 4, 'Saint Agapit'),
(1480, 4, 'Saint Alexis des Monts'),
(1481, 4, 'Saint Amable'),
(1482, 4, 'Saint André Avellin'),
(1483, 4, 'Saint Anselme'),
(1484, 4, 'Saint Augustin De Desmaures'),
(1485, 4, 'Saint Barthélémy'),
(1486, 4, 'Saint Basile le Grand'),
(1487, 4, 'Saint Bernard'),
(1488, 4, 'Saint Bruno'),
(1489, 4, 'Saint Bruno de Montarville'),
(1490, 4, 'Saint Calixte'),
(1491, 4, '<option value=Saint Cesaire\"'),
(1492, 4, 'Saint Césaire'),
(1493, 4, 'Saint Charles Borromée'),
(1494, 4, 'Saint Chrysostome'),
(1495, 4, 'Saint Côme'),
(1496, 4, 'Saint Constant'),
(1497, 4, 'Saint Denis de Brompton'),
(1498, 4, 'Saint Denis sur Richelieu'),
(1499, 4, 'Saint Donat de Montcalm'),
(1500, 4, 'Saint Épiphane'),
(1501, 4, 'Saint Esprit'),
(1502, 4, 'Saint Eustache'),
(1503, 4, 'Saint Fabien'),
(1504, 4, 'Saint Felicien'),
(1505, 4, 'Saint Félicien'),
(1506, 4, 'Saint Félix de Valois'),
(1507, 4, 'Saint Flavien'),
(1508, 4, 'Saint Georges'),
(1509, 4, 'Saint Henri de Lévis'),
(1510, 4, 'Saint Hippolyte'),
(1511, 4, 'Saint Hubert'),
(1512, 4, 'Saint Hyacinthe'),
(1513, 4, 'Saint Isidore'),
(1514, 4, 'Saint Jacques'),
(1515, 4, 'Saint Jean sur Richelieu'),
(1516, 4, 'Saint Jerome'),
(1517, 4, 'Saint Jérome'),
(1518, 4, 'Saint Jérôme'),
(1519, 4, 'Saint Joseph de Beauce'),
(1520, 4, 'Saint Joseph du Lac'),
(1521, 4, 'Saint Lambert'),
(1522, 4, 'Saint Laurent'),
(1523, 4, 'Saint Laurent Île d\'Orléans'),
(1524, 4, 'Saint Lazare'),
(1525, 4, 'Saint Leonard'),
(1526, 4, 'Saint Léonard'),
(1527, 4, 'Saint Martin'),
(1528, 4, 'Saint Omer'),
(1529, 4, 'Saint Pamphile'),
(1530, 4, 'Saint Pascal'),
(1531, 4, 'Saint Paul'),
(1532, 4, 'Saint Paulin'),
(1533, 4, 'Saint Pie'),
(1534, 4, 'Saint Polycarpe'),
(1535, 4, 'Saint Prime'),
(1536, 4, 'Saint Raymond'),
(1537, 4, 'Saint Remi'),
(1538, 4, 'Saint Rémi'),
(1539, 4, 'Saint Roch de l\'Achigan'),
(1540, 4, 'Saint Romuald'),
(1541, 4, 'Saint Sauveur'),
(1542, 4, 'Saint Siméon'),
(1543, 4, 'Saint Thomas'),
(1544, 4, 'Saint Tite'),
(1545, 4, 'Saint Ubalde'),
(1546, 4, 'Saint Vallier'),
(1547, 4, 'Saint Wenceslas'),
(1548, 4, 'Saint Zotique'),
(1549, 4, 'Sainte Adele'),
(1550, 4, 'Sainte Adèle'),
(1551, 4, 'Sainte Agathe des Monts'),
(1552, 4, 'Sainte Anne de Bellevue'),
(1553, 4, 'Sainte Anne des Monts'),
(1554, 4, 'Sainte Anne des Plaines'),
(1555, 4, 'Sainte Catherine (Roussillon)'),
(1556, 4, 'Sainte Catherine'),
(1557, 4, 'Sainte Claire'),
(1558, 4, 'Sainte Croix'),
(1559, 4, 'Sainte Félicité'),
(1560, 4, 'Sainte Foy'),
(1561, 4, 'Sainte Genevieve'),
(1562, 4, 'Sainte Julie (Lajemmerais)'),
(1563, 4, 'Sainte Julie'),
(1564, 4, 'Sainte Madeleine'),
(1565, 4, 'Sainte Marie'),
(1566, 4, 'Sainte Marthe sur le Lac'),
(1567, 4, 'Sainte Rose'),
(1568, 4, 'Sainte Sophie'),
(1569, 4, 'Sainte Thècle'),
(1570, 4, 'Sainte Thérèse '),
(1571, 4, 'Sainte Therese'),
(1572, 4, 'Sainte Thérèse'),
(1573, 4, 'Sainte Thérèse de Blainville'),
(1574, 4, 'Salaberry de Valleyfield'),
(1575, 4, 'Salluit'),
(1576, 4, 'Sayabec'),
(1577, 4, 'Schefferville'),
(1578, 4, 'Senneterre'),
(1579, 4, 'Sept Iles'),
(1580, 4, 'Sept Îles'),
(1581, 4, 'Shawinigan'),
(1582, 4, 'Shawinigan Sud'),
(1583, 4, 'Shawville'),
(1584, 4, 'Shefford'),
(1585, 4, 'Sherbrooke'),
(1586, 4, 'Shipshaw'),
(1587, 4, 'Sorel Tracy'),
(1588, 4, 'Sorel Tracy'),
(1589, 4, 'St Adolphe d\'Howrd'),
(1590, 4, 'St Alexis D Monts'),
(1591, 4, 'St Alphonse Rodrig'),
(1592, 4, 'St Ambroise D Kild'),
(1593, 4, 'St Apollinaire'),
(1594, 4, 'St Augustin D Desm'),
(1595, 4, 'St Basile le Grand'),
(1596, 4, 'St Benoit Labre'),
(1597, 4, 'St Boniface D Shaw'),
(1598, 4, 'St Bruno Du L St J'),
(1599, 4, 'St Bruno Lsj'),
(1600, 4, 'St Charles Borrom'),
(1601, 4, 'St Charles Brromee'),
(1602, 4, 'St Charles Brromée'),
(1603, 4, 'St Charles de Bell'),
(1604, 4, 'St Come Linière'),
(1605, 4, 'St Cyrille de Wend'),
(1606, 4, 'St Damase'),
(1607, 4, 'St Damien de Buckl'),
(1608, 4, 'St Denis de Brompt'),
(1609, 4, 'St Denis sur Rich'),
(1610, 4, 'St Donat De Mtcalm'),
(1611, 4, 'St Étienne de Grès'),
(1612, 4, 'St Étienne ds Grès'),
(1613, 4, 'St Eustache'),
(1614, 4, 'St Fabien de Panet'),
(1615, 4, 'St Felix De Valois'),
(1616, 4, 'St Félix De Valois'),
(1617, 4, 'St Ferréol L Neig'),
(1618, 4, 'St Fran Riv Du Sud'),
(1619, 4, 'St Gabriel D Brand'),
(1620, 4, 'St Ged De Bce'),
(1621, 4, 'St Gédéon d Beauce'),
(1622, 4, 'St Georges de Wind'),
(1623, 4, 'St J Chrysostome'),
(1624, 4, 'St Jacques D Leeds'),
(1625, 4, 'St Jean Port Joli'),
(1626, 4, 'St Joseph d Beauce'),
(1627, 4, 'St Joseph du Lac'),
(1628, 4, 'St Lambert De Lauz'),
(1629, 4, 'St Leonard d\'Aston'),
(1630, 4, 'St Léonard d\'Aston'),
(1631, 4, 'St Lin Laurentides'),
(1632, 4, 'St Mar Des Carr'),
(1633, 4, 'St Mathieu Beloeil'),
(1634, 4, 'St Mich D Sts'),
(1635, 4, 'St Naz Du Lsj'),
(1636, 4, 'St Nazaire D L S J'),
(1637, 4, 'St Patr Beaur'),
(1638, 4, 'St Pierre I D\'Orl'),
(1639, 4, 'St Prosper d Dorch'),
(1640, 4, 'St Raphael Be'),
(1641, 4, 'St Roch D\'Ach'),
(1642, 4, 'St Roch de l\'Achig'),
(1643, 4, 'St Roch des Auln'),
(1644, 4, 'St Sebast De Front'),
(1645, 4, 'St Stanislas D Cha'),
(1646, 4, 'St Ubald'),
(1647, 4, 'Stanstead'),
(1648, 4, 'Ste Agathe des Mts'),
(1649, 4, 'Ste Anne d Plaines'),
(1650, 4, 'Ste Anne de Bellev'),
(1651, 4, 'Ste Anne de la Pér'),
(1652, 4, 'Ste Anne des Monts'),
(1653, 4, 'Ste Anne des Mts'),
(1654, 4, 'Ste Anne Per'),
(1655, 4, 'Ste Anne Plai'),
(1656, 4, 'Ste Brigitte D Lav'),
(1657, 4, 'Ste Cath d l J Car'),
(1658, 4, 'Ste Genev d Batisc'),
(1659, 4, 'Ste Julienne'),
(1660, 4, 'Ste Marg D Lac Mas'),
(1661, 4, 'Ste Marg Lac Masson'),
(1662, 4, 'Ste Martine'),
(1663, 4, 'Stoke'),
(1664, 4, 'Stoneham'),
(1665, 4, 'Sutton'),
(1666, 4, 'Temiscaming'),
(1667, 4, 'Témiscouata S Le L'),
(1668, 4, 'Témiscouata sur le Lac'),
(1669, 4, 'Témiscouta s Lac'),
(1670, 4, 'Terrebonne'),
(1671, 4, 'Thetford Mines'),
(1672, 4, 'Thurso'),
(1673, 4, 'Tring Jonction'),
(1674, 4, 'Trois Pistoles'),
(1675, 4, 'Trois Rivières'),
(1676, 4, 'Upton'),
(1677, 4, 'Val d\'Or'),
(1678, 4, 'Val des Monts'),
(1679, 4, 'Val Morin'),
(1680, 4, 'Valcourt'),
(1681, 4, 'Vallee Jonction'),
(1682, 4, 'Vallée Jonction'),
(1683, 4, 'Vanier'),
(1684, 4, 'Varennes'),
(1685, 4, 'Vaudreuil Dorion'),
(1686, 4, 'Venise en Québec'),
(1687, 4, 'Verchères'),
(1688, 4, 'Verdun'),
(1689, 4, 'Victoriaville'),
(1690, 4, 'Ville Marie'),
(1691, 4, 'Vimont'),
(1692, 4, 'Wakefield'),
(1693, 4, 'Warwick'),
(1694, 4, 'Waskaganish'),
(1695, 4, 'Waswanipi'),
(1696, 4, 'Waterloo'),
(1697, 4, 'Weedon'),
(1698, 4, 'Wemindji'),
(1699, 4, 'Wendake'),
(1700, 4, 'Westmount'),
(1701, 4, 'Windsor'),
(1702, 7, 'Arcola'),
(1703, 7, 'Assiniboia'),
(1704, 7, 'Battleford'),
(1705, 7, 'Beechy'),
(1706, 7, 'Biggar'),
(1707, 7, 'Black Lake'),
(1708, 7, 'Broadview'),
(1709, 7, 'Bruno'),
(1710, 7, 'Cabri'),
(1711, 7, 'Canora'),
(1712, 7, 'Canwood'),
(1713, 7, 'Carlyle'),
(1714, 7, 'Caronport'),
(1715, 7, 'Carrot River'),
(1716, 7, 'Climax'),
(1717, 7, 'Craik'),
(1718, 7, 'Cut Knife'),
(1719, 7, 'Davidson'),
(1720, 7, 'Dinsmore'),
(1721, 7, 'Eastend'),
(1722, 7, 'Emerald Park'),
(1723, 7, 'Esterhazy'),
(1724, 7, 'Estevan'),
(1725, 7, 'Eston'),
(1726, 7, 'Falher'),
(1727, 7, 'Fort Qu\'Appelle'),
(1728, 7, 'Gravelbourg'),
(1729, 7, 'Grenfell'),
(1730, 7, 'Gull Lake'),
(1731, 7, 'Hafford'),
(1732, 7, 'Hamilton'),
(1733, 7, 'Herbert'),
(1734, 7, 'Hudson Bay'),
(1735, 7, 'Humboldt'),
(1736, 7, 'Ile A La Crosse'),
(1737, 7, 'Île à la Crosse'),
(1738, 7, 'Indian Head'),
(1739, 7, 'Kamsack'),
(1740, 7, 'Kelvington'),
(1741, 7, 'Kerrobert'),
(1742, 7, 'Kindersley'),
(1743, 7, 'Kipling'),
(1744, 7, 'La Loche'),
(1745, 7, 'La Ronge'),
(1746, 7, 'Lafleche'),
(1747, 7, 'Langenburg'),
(1748, 7, 'Lanigan'),
(1749, 7, 'Leader'),
(1750, 7, 'Lloydminster'),
(1751, 7, 'Maidstone'),
(1752, 7, 'Maple Creek'),
(1753, 7, 'Martensville'),
(1754, 7, 'Meadow Lake'),
(1755, 7, 'Melfort'),
(1756, 7, 'Melville'),
(1757, 7, 'Moose Jaw'),
(1758, 7, 'Moosomin'),
(1759, 7, 'Nipawin'),
(1760, 7, 'Nokomis'),
(1761, 7, 'North Battleford'),
(1762, 7, 'Onion Lake'),
(1763, 7, 'Outlook'),
(1764, 7, 'Oxbow'),
(1765, 7, 'Pelican Narrows'),
(1766, 7, 'Pilot Butte'),
(1767, 7, 'Porcupine Plain'),
(1768, 7, 'Preeceville'),
(1769, 7, 'Prince Albert'),
(1770, 7, 'Radville'),
(1771, 7, 'Redvers'),
(1772, 7, 'Regina'),
(1773, 7, 'Rosetown'),
(1774, 7, 'Rosthern'),
(1775, 7, 'Saskatoon'),
(1776, 7, 'Shaunavon'),
(1777, 7, 'Shellbrook'),
(1778, 7, 'Spiritwood'),
(1779, 7, 'Strasbourg'),
(1780, 7, 'Swift Current'),
(1781, 7, 'Tisdale'),
(1782, 7, 'Turtleford'),
(1783, 7, 'Unity'),
(1784, 7, 'Wadena'),
(1785, 7, 'Wakaw'),
(1786, 7, 'Warman'),
(1787, 7, 'Watrous'),
(1788, 7, 'Weyburn'),
(1789, 7, 'White City'),
(1790, 7, 'Wilkie'),
(1791, 7, 'Wolseley'),
(1792, 7, 'Wynyard'),
(1793, 7, 'Yorkton'),
(1794, 14, 'Dawson'),
(1795, 14, 'Mayo'),
(1796, 14, 'Watson Lake'),
(1797, 14, 'Whitehorse');

-- --------------------------------------------------------

--
-- Table structure for table `failed_jobs`
--

CREATE TABLE `failed_jobs` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `connection` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `queue` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `payload` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `exception` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(4, '2014_10_12_000000_create_users_table', 1),
(5, '2014_10_12_100000_create_password_resets_table', 1),
(6, '2019_08_19_000000_create_failed_jobs_table', 1);

-- --------------------------------------------------------

--
-- Table structure for table `options`
--

CREATE TABLE `options` (
  `id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `position` int(11) NOT NULL,
  `option_text` text NOT NULL,
  `option_subtext` text NOT NULL,
  `specify` int(11) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `options`
--

INSERT INTO `options` (`id`, `question_id`, `position`, `option_text`, `option_subtext`, `specify`) VALUES
(1, 1, 1, '{\"en\":\"Very Uncomfortable\",\"fn\":\"\"}', '', 0),
(2, 1, 2, '{\"en\":\"Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(3, 1, 3, '{\"en\":\"Neither Uncomfortable Nor Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(4, 1, 4, '{\"en\":\"Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(5, 1, 5, '{\"en\":\"Very Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(6, 2, 1, '{\"en\":\"Very Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(7, 2, 2, '{\"en\":\"Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(8, 2, 3, '{\"en\":\"Neither Uncomfortable Nor Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(9, 2, 4, '{\"en\":\"Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(10, 2, 5, '{\"en\":\"Very Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(11, 3, 1, '{\"en\":\"Very Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(12, 3, 2, '{\"en\":\"Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(13, 3, 3, '{\"en\":\"Neither Uncomfortable Nor Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(14, 3, 4, '{\"en\":\"Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(15, 3, 5, '{\"en\":\"Very Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(16, 4, 1, '{\"en\":\"Very Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(17, 4, 2, '{\"en\":\"Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(18, 4, 3, '{\"en\":\"Neither Uncomfortable Nor Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(19, 4, 4, '{\"en\":\"Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(20, 4, 5, '{\"en\":\"Very Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(21, 5, 1, '{\"en\":\"Very Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(22, 5, 2, '{\"en\":\"Uncomfortable\",\"fn\":\"\"}\r\n', '', 0),
(23, 5, 3, '{\"en\":\"Neither Uncomfortable Nor Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(24, 5, 4, '{\"en\":\"Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(25, 5, 5, '{\"en\":\"Very Comfortable\",\"fn\":\"\"}\r\n', '', 0),
(26, 9, 1, '{\"en\":\"male\",\"fn\":\"Homme\"}', '', 0),
(27, 9, 2, '{\"en\":\"female\",\"fn\":\"Femme\"}', '', 0),
(28, 10, 1, '{\"en\":\" Primary chronic pain\",\"fn\":\"Douleur chronique primaire\"}', '', 0),
(29, 10, 3, '{\"en\":\" Chronic postsurgical and post-traumatic pain\",\"fn\":\"Douleur chronique post-chirurgicale ou post-traumatique\"}', '', 0),
(30, 10, 4, '{\"en\":\"Chronic neuropathic pain\",\"fn\":\"Douleur chronique neuropathique\"}', '', 0),
(31, 10, 5, '{\"en\":\"Chronic headache and orofacial pain\",\"fn\":\"Céphalées et douleur orofaciale chroniques \"}', '', 0),
(32, 10, 6, '{\"en\":\"Chronic visceral pain\",\"fn\":\"Chronic visceral pain	Douleur chronique viscérale 	\"}', '', 0),
(33, 10, 7, '{\"en\":\"Chronic musculoskeletal pain\",\"fn\":\"Douleur chronique musculosquelettique\"}', '', 0),
(34, 10, 8, '{\"en\":\"Other (Please specify)\",\"fn\":\"Autre (veuillez préciser)\"}', '', 0),
(35, 11, 1, '{\"en\":\"Lowest level of pain\",\"fn\":\"Douleur très faible\"}', '', 0),
(36, 11, 2, '{\"en\":\"Low level of pain\",\"fn\":\"Douleur faible\"}', '', 0),
(37, 11, 3, '{\"en\":\"Medium level of pain\",\"fn\":\"Douleur moyenne\"}', '', 0),
(38, 11, 4, '{\"en\":\"High level of pain\",\"fn\":\"Douleur intense\"}', '', 0),
(39, 11, 5, '{\"en\":\"Highest level of pain\",\"fn\":\"Douleur très intense\"}', '', 0),
(40, 13, 1, '{\"en\":\"Aggression or irritability\",\"fn\":\"Agressivité ou irritabilité\"}', '', 0),
(41, 13, 2, '{\"en\":\"Focus\",\"fn\":\"Difficulté de concentration\"}', '', 0),
(42, 13, 3, '{\"en\":\"Panic attacks\",\"fn\":\"Crises de panique\"}', '', 0),
(43, 13, 4, '{\"en\":\"Appetite\",\"fn\":\"Appétit\"}', '', 0),
(44, 13, 5, '{\"en\":\"Headaches\",\"fn\":\"Céphalées\"}', '', 0),
(45, 13, 6, '{\"en\":\"Paranoia\",\"fn\":\"Paranoïa\"}', '', 0),
(46, 13, 7, '{\"en\":\"Cancer-related pain\",\"fn\":\"Douleur liée à un cancer\"}', '', 0),
(47, 13, 8, '{\"en\":\"Hypervigilance and hyperawareness\",\"fn\":\"Hypervigilance et hypersensibilité\"}', '', 0),
(48, 13, 9, '{\"en\":\"Restlessness\",\"fn\":\"Agitation\"}', '', 0),
(49, 13, 10, '{\"en\":\"Dental pain\",\"fn\":\"Dentalgie\"}', '', 0),
(50, 13, 11, '{\"en\":\"Joint pain\",\"fn\":\"Arthralgie\"}', '', 0),
(51, 13, 12, '{\"en\":\"Seizures\",\"fn\":\"Convulsions\"}', '', 0),
(52, 13, 13, '{\"en\":\"Diarrhea\",\"fn\":\"Diarrhée\"}', '', 0),
(53, 13, 14, '{\"en\":\"Muscle spasms\",\"fn\":\"Spasmes musculaires\"}', '', 0),
(54, 13, 15, '{\"en\":\"Spasticity\",\"fn\":\"Spasticité\"}', '', 0),
(55, 13, 16, '{\"en\":\"Difficulty falling asleep\",\"fn\":\"Difficulté à s’endormir\"}', '', 0),
(56, 13, 17, '{\"en\":\"Myofascial pain\",\"fn\":\"Douleur myofaciale\"}', '', 0),
(57, 13, 18, '{\"en\":\"Stress\",\"fn\":\"Stress\"}', '', 0),
(58, 13, 19, '{\"en\":\"Difficulty staying asleep\",\"fn\":\"Difficulté à rester endormi\"}', '', 0),
(59, 13, 20, '{\"en\":\"Nausea\",\"fn\":\"Nausées\"}', '', 0),
(60, 13, 21, '{\"en\":\"Tiredness/fatigue\",\"fn\":\"Fatigue\"}', '', 0),
(61, 13, 22, '{\"en\":\"Distressing and intense memories\",\"fn\":\"Sentiment de détresse et souvenirs intenses\"}', '', 0),
(62, 13, 23, '{\"en\":\"Neuropathic pain\",\"fn\":\"Douleur neuropathique\"}', '', 0),
(63, 13, 24, '{\"en\":\"Tremors\",\"fn\":\"Tremblements\"}', '', 0),
(64, 13, 25, '{\"en\":\"Drowsiness\",\"fn\":\"Somnolence\"}', '', 0),
(65, 13, 26, '{\"en\":\"Nightmares\",\"fn\":\"Cauchemars\"}', '', 0),
(66, 13, 27, '{\"en\":\"Visceral pain\",\"fn\":\"Douleur viscérale\"}', '', 0),
(67, 13, 28, '{\"en\":\"Flashbacks\",\"fn\":\"Flashbacks\"}', '', 0),
(68, 13, 29, '{\"en\":\"Nociceptive pain\",\"fn\":\"Douleur nociceptive\"}', '', 0),
(69, 13, 30, '{\"en\":\"Other (Please specify)\",\"fn\":\"Autre (veuillez préciser)\"}', '', 1),
(70, 14, 1, '{\"en\":\"Acetaminophen\",\"fn\":\"Acétaminophène\"}', '', 0),
(71, 14, 2, '{\"en\":\"Antidepressants\",\"fn\":\"Antidépresseurs\"}', '', 0),
(72, 14, 3, '{\"en\":\"Antiepileptics\",\"fn\":\"Antiépileptiques\"}', '', 0),
(73, 14, 4, '{\"en\":\"Antipsychotics\",\"fn\":\"Antipsychotiques\"}', '', 0),
(74, 14, 5, '{\"en\":\"Benzodiazepines\",\"fn\":\"Benzodiazépines\"}', '', 0),
(75, 14, 6, '{\"en\":\"Corticosteroids\",\"fn\":\"Corticostéroïdes\"}', '', 0),
(76, 14, 7, '{\"en\":\"Muscle relaxants\",\"fn\":\"Relaxants musculaires\"}', '', 0),
(77, 14, 8, '{\"en\":\"NSAIDs\",\"fn\":\"AINS\"}', '', 0),
(78, 14, 9, '{\"en\":\"Oncology treatment (chemotherapy, radiation therapy, immunotherapy, hormone therapy)\",\"fn\":\"Traitement anticancéreux (chimiothérapie, radiothérapie, immunothérapie, hormonothérapie)\"}', '', 0),
(79, 14, 10, '{\"en\":\"Short-acting opioids\",\"fn\":\"Opioïdes à courte durée d’action 	\"}', '', 0),
(80, 14, 11, '{\"en\":\"Long-acting opioids\",\"fn\":\"Opioïdes à longue durée d’action\"}', '', 0),
(81, 14, 12, '{\"en\":\"Psychostimulants\",\"fn\":\"Psychostimulants \"}', '', 0),
(82, 14, 13, '{\"en\":\"Synthetic cannabinoids\",\"fn\":\"Cannabinoïdes synthétiques\"}', '', 0),
(83, 14, 14, '{\"en\":\"Prescription synthetic cannabinoids (nabilone, dronabinol)\",\"fn\":\"Cannabinoïdes synthétiques sur ordonnance (nabilone, dronabinol)\"}', '', 0),
(84, 14, 15, '{\"en\":\"Triptans\",\"fn\":\"Triptans\"}', '', 0),
(85, 14, 16, '{\"en\":\"Gabapentinoids (nerve modulators)\",\"fn\":\"Gabapentinoïdes (modulateurs du système nerveux)\"}', '', 0),
(86, 14, 17, '{\"en\":\"Anticoagulants / blood thinners / antiplatelets\",\"fn\":\"Anticoagulants / antiplaquettaires\"}', '', 0),
(87, 14, 18, '{\"en\":\"Antihypertensives\",\"fn\":\"Antihypertenseurs \"}', '', 0),
(88, 14, 19, '{\"en\":\"Antidiabetic agents (oral hypoglycemic agents and/or insulin and other injectables)\",\"fn\":\"Antidiabétiques (agents hypoglycémiants à prise orale et/ou insuline et autres agents injectables) \"}', '', 0),
(89, 14, 20, '{\"en\":\"Immunomodulators (ie, infliximab, azathioprine, adalimumab)\",\"fn\":\"Immunomodulateurs (infliximab, azathioprine, adalimumab)\"}', '', 0),
(90, 14, 21, '{\"en\":\"Hormone therapy\",\"fn\":\"Hormonothérapie\"}', '', 0),
(91, 14, 22, '{\"en\":\"Over-the-counter sleep aids\",\"fn\":\"Produits d’aide au sommeil en vente libre \"}', '', 1),
(92, 14, 23, '{\"en\":\"Other (Please specify)\",\"fn\":\"Autre (veuillez préciser)\"}', '', 1),
(93, 15, 1, '{\"en\":\"Yes\",\"fn\":\"Oui\"}', '', 0),
(94, 15, 2, '{\"en\":\"No\",\"fn\":\"Non\"}', '', 0),
(95, 16, 1, '{\"en\":\"Medical\",\"fn\":\"Pour des raisons médicales\"}', '', 0),
(96, 16, 2, '{\"en\":\"Recreational\",\"fn\":\"À des fins récréatives\"}', '', 0),
(97, 16, 3, '{\"en\":\"Both\",\"fn\":\"Les deux\"}', '', 0),
(98, 18, 1, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  26.3 </em><em>CBD &nbsp;  | &nbsp;  15</em>\",\"fn\":\"\"}', '', 1),
(99, 18, 2, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  10 </em><em>CBD &nbsp;  | &nbsp;  <0.7</em>\",\"fn\":\"\"}', '', 1),
(100, 18, 3, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  < 0.7</em><em>CBD &nbsp;  | &nbsp;  20</em>\",\"fn\":\"\"}', '', 1),
(101, 19, 1, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  26.3 </em><em>CBD &nbsp;  | &nbsp;  15</em>\",\"fn\":\"\"}', '', 1),
(102, 19, 2, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  10 </em><em>CBD &nbsp;  | &nbsp;  <0.7</em>\",\"fn\":\"\"}', '', 1),
(103, 19, 3, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  < 0.7</em><em>CBD &nbsp;  | &nbsp;  20</em>\",\"fn\":\"\"}', '', 1),
(104, 20, 1, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  26.3 </em><em>CBD &nbsp;  | &nbsp;  15</em>\",\"fn\":\"\"}', '', 1),
(105, 20, 2, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  10 </em><em>CBD &nbsp;  | &nbsp;  <0.7</em>\",\"fn\":\"\"}', '', 1),
(106, 20, 3, '{\"en\":\"<em>THC &nbsp;  | &nbsp;  < 0.7</em><em>CBD &nbsp;  | &nbsp;  20</em>\",\"fn\":\"\"}', '', 1),
(107, 21, 1, '{\"en\":\"Yes, for Cannabis Oil\",\"fn\":\"Oui, pour l’huile de cannabis\"}', '', 0),
(108, 21, 2, '{\"en\":\"Yes, for Cannabis Softgel\",\"fn\":\"Oui, pour les gélules de cannabis\"}', '', 0),
(109, 21, 3, '{\"en\":\"None from both\",\"fn\":\"Dans aucun cas \"}', '', 0),
(110, 25, 1, '{\"en\":\"Yes\",\"fn\":\"Oui\"}', '', 0),
(111, 25, 2, '{\"en\":\"No\",\"fn\":\"Non\"}', '', 0),
(112, 10, 2, '{\"en\":\"Chronic cancer pain\",\"fn\":\"Douleur chronique cancéreuse\"}', '', 0);

-- --------------------------------------------------------

--
-- Table structure for table `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `patients`
--

CREATE TABLE `patients` (
  `id` int(11) NOT NULL,
  `doctor_id` int(11) NOT NULL,
  `initials` varchar(255) DEFAULT NULL,
  `assessment_date` varchar(255) DEFAULT NULL,
  `next_assessment_date` varchar(255) DEFAULT NULL,
  `followup_type` int(1) NOT NULL DEFAULT 1,
  `created_on` datetime NOT NULL DEFAULT current_timestamp(),
  `modified_on` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `patients`
--

INSERT INTO `patients` (`id`, `doctor_id`, `initials`, `assessment_date`, `next_assessment_date`, `followup_type`, `created_on`, `modified_on`) VALUES
(1, 1, 'Akash Kumar', '2020-01-01', '2020-02-02', 1, '2020-02-06 12:52:17', NULL),
(3, 1, 'vikash kumar', '2020-01-04', '2020-02-01', 3, '2020-02-06 15:46:13', NULL),
(4, 1, 'tarun', '2020-01-07', '2020-02-02', 1, '2020-02-06 16:02:08', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `province_m`
--

CREATE TABLE `province_m` (
  `Province_ID` int(11) NOT NULL,
  `Province_Name` varchar(255) NOT NULL,
  `Country_ID` int(11) NOT NULL,
  `region_id` int(11) DEFAULT NULL,
  `Active` int(11) NOT NULL DEFAULT 1,
  `CreatedBy` int(11) DEFAULT NULL,
  `CreatedOn` datetime NOT NULL DEFAULT current_timestamp(),
  `ModifiedBy` int(11) DEFAULT NULL,
  `ModifiedOn` datetime NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `province_m`
--

INSERT INTO `province_m` (`Province_ID`, `Province_Name`, `Country_ID`, `region_id`, `Active`, `CreatedBy`, `CreatedOn`, `ModifiedBy`, `ModifiedOn`) VALUES
(1, 'Delaware', 1, NULL, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(2, 'Ontario', 1, 1, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(3, 'British Columbia', 1, 4, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(4, 'Quebec', 1, 2, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(5, 'Alberta', 1, 4, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(6, 'Nova Scotia', 1, 3, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(7, 'Saskatchewan', 1, 4, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(8, 'Manitoba', 1, 4, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(9, 'New Brunswick', 1, 3, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(10, 'Newfoundland and Labrador', 1, 3, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(11, 'Prince Edward Island', 1, 3, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(12, 'Northwest Territories', 1, NULL, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(13, 'Nunavut', 1, NULL, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00'),
(14, 'Yukon', 1, NULL, 1, 1, '0000-00-00 00:00:00', 0, '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `questions`
--

CREATE TABLE `questions` (
  `id` int(11) NOT NULL,
  `questions` text NOT NULL,
  `question_subtext` text NOT NULL,
  `parent_question_id` int(11) NOT NULL,
  `position` int(11) NOT NULL,
  `question_type_id` int(11) NOT NULL,
  `header_text` text NOT NULL,
  `survey_type_id` int(11) NOT NULL,
  `created_on` datetime NOT NULL DEFAULT current_timestamp(),
  `status` int(1) NOT NULL DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `questions`
--

INSERT INTO `questions` (`id`, `questions`, `question_subtext`, `parent_question_id`, `position`, `question_type_id`, `header_text`, `survey_type_id`, `created_on`, `status`) VALUES
(1, '{\"en\":\"How comfortable are you with prescribing medical cannabis?\",\"fn\":\"Dans quelle mesure êtes-vous à l’aise avec la prescription de cannabis médicinal?\"}\r\n', '', 0, 1, 2, '', 1, '2020-01-30 11:37:53', 1),
(2, '{\"en\":\"How comfortable are you with the medical cannabis authorization process?\",\"fn\":\"Dans quelle mesure êtes-vous à l’aise avec le processus d’autorisation relatif à l’utilisation de cannabis médicinal?\"}\r\n', '', 0, 2, 2, '', 1, '2020-01-30 11:43:33', 1),
(3, '{\"en\":\"How comfortable are you with initiating a CBD-dominant product?\",\"fn\":\"Dans quelle mesure êtes-vous à l’aise avec la mise en route d’un traitement par un produit avec une dominance de CBD?\"}\r\n', '', 0, 3, 2, '', 1, '2020-01-30 11:43:33', 1),
(4, '{\"en\":\"How comfortable are you with recommending the addition of a low-dose THC product or a balanced THC:CBD product (as needed)?\",\"fn\":\"Dans quelle mesure êtes-vous à l’aise de recommander l’ajout d’un produit renfermant une faible dose de THC ou des doses équilibrées de THC et de CBD, au besoin?   \"}\r\n', '', 0, 4, 2, '', 1, '2020-01-30 11:43:33', 1),
(5, '{\"en\":\"How comfortable are you talking about medical cannabis with your colleagues?\",\"fn\":\"Dans quelle mesure êtes-vous à l’aise de parler de cannabis médicinal avec vos collègues? \"}\r\n', '', 0, 5, 2, '', 1, '2020-01-30 11:43:33', 1),
(6, '{\"en\":\"Enter the date of assessment.\",\"fn\":\"Entrez la date de l’évaluation.\"}', '', 0, 1, 5, '', 2, '2020-02-01 13:15:52', 1),
(7, '{\"en\":\"Please enter this patient’s initials.\",\"fn\":\"Veuillez entrer les initiales du patient.\"}', '{\"en\":\"(This will help you identify this patient for the follow-up assessments.)\",\"fn\":\"Ce renseignement vous aidera à identifier le patient au moment des évaluations de suivi.\"}', 0, 2, 1, '', 2, '2020-02-01 13:20:59', 1),
(8, '{\"en\":\"What is the patient’s age (in years) ?\",\"fn\":\"Quel est l’âge du patient (en années)?\"}', '', 0, 3, 1, '', 2, '2020-02-01 13:25:41', 1),
(9, '{\"en\":\"What is the patient’s sex ?\",\"fn\":\"Quel est le sexe du patient?\"}', '', 0, 4, 2, '', 2, '2020-02-01 14:47:47', 1),
(10, '{\"en\":\"Please identify the category of chronic pain which most applies to your patient.\",\"fn\":\"Laquelle des catégories de douleur chronique suivantes correspond le mieux au cas de votre patient?\"}', '{\"en\":\"(Please select one)\",\"fn\":\"(Veuillez sélectionner une seule catégorie.)\"}', 0, 5, 2, '', 2, '2020-02-01 14:59:40', 1),
(11, '{\"en\":\"How would you rate your patient’s pain level on a scale from 1 to 5? \",\"fn\":\"À une échelle de 1 à 5, à combien évalueriez-vous l’intensité de la douleur ressentie par le patient?\"}', '{\"en\":\"(1 = lowest level of pain; 5 = highest level of pain)\",\"fn\":\"(1 = douleur très faible; 5 = douleur très intense)\"}', 0, 6, 2, '', 2, '2020-02-01 15:17:17', 1),
(12, '{\"en\":\"Please indicate the year this condition was diagnosed.\",\"fn\":\"Veuillez indiquer l’année du diagnostic de douleur chronique.\"}', '{\"en\":\"(Please enter the information in YYYY format)\",\"fn\":\"(Veuillez entrer l’année au format AAAA.)\"}', 0, 7, 4, '', 2, '2020-02-01 15:18:44', 1),
(13, '{\"en\":\"Please select the symptoms for which your patient wants to be treated with medical cannabis.\",\"fn\":\"Veuillez indiquer les symptômes pour lesquels le patient souhaite prendre du cannabis médicinal.\"}', '{\"en\":\"(Please select all that apply.)\",\"fn\":\"(Veuillez sélectionner toutes les réponses pertinentes.)\"}', 0, 8, 3, '', 2, '2020-02-01 15:20:17', 1),
(14, '{\"en\":\"Please select the following classes of medications which your patient is currently on.\",\"fn\":\"Veuillez sélectionner les classes de médicaments que prend le patient à l’heure actuelle. \"}', '{\"en\":\"(Please select all that apply.)\",\"fn\":\"(Veuillez sélectionner toutes les classes pertinentes.)\"}', 0, 9, 3, '', 2, '2020-02-01 15:21:27', 1),
(15, '{\"en\":\"Has your patient ever used any form of cannabis?\",\"fn\":\"Le patient a-t-il déjà utilisé du cannabis sous une forme quelconque?\"}', '{\"en\":\"(e.g. such as smoked or vaped cannabis, synthetic prescribed cannabinoids like dronabinol, Sativex®, nabilone, or hemp/CBD)\",\"fn\":\"(p. ex. par inhalation de fumée ou par vaporisation, ou sous forme de cannabinoïde synthétique sur ordonnance comme le dronabinol, Sativex®, le nabilone ou le chanvre/CBD)\"}', 0, 10, 2, '', 2, '2020-02-01 15:32:03', 1),
(16, '{\"en\":\"For what purposes did the patient use Cannabis previously?\",\"fn\":\"Pour quelle raison le patient a-t-il déjà utilisé du cannabis?\"}', '', 15, 1, 2, '', 2, '2020-02-03 12:10:49', 1),
(17, '{\"en\":\"Please select which Spectrum Therapeutics product you authorized.\",\"fn\":\"Veuillez sélectionner les produits de Spectrum Therapeutics que vous avez autorisés.\"}', '{\"en\":\"(Please select all that apply)\",\"fn\":\"(Sélectionnez tous les produits pertinents.)\"}', 0, 11, 6, '', 2, '2020-02-03 12:17:07', 1),
(18, '{\"en\":\"Oil \",\"fn\":\"\"}\r\n\r\n', '{\"en\":\"(mg/ml)\",\"fn\":\"\"}', 17, 1, 3, '', 2, '2020-02-03 13:16:09', 1),
(19, '{\"en\":\"Softgels  \",\"fn\":\"\"}', '{\"en\":\"(mg/ml)\",\"fn\":\"\"}', 17, 2, 3, '', 2, '2020-02-03 13:16:09', 1),
(20, '{\"en\":\"Softgels  \",\"fn\":\"\"}', '{\"en\":\"(mg/ml)\",\"fn\":\"\"}', 17, 3, 3, '', 2, '2020-02-03 13:16:09', 1),
(21, '{\"en\":\"Have you shared a titration schedule with the patient ?\",\"fn\":\"Avez-vous remis un schéma posologique au patient?  \"}', '', 0, 12, 2, '', 2, '2020-02-03 14:33:17', 1),
(22, '{\"en\":\"Please share the titration schedule for the prescribed Cannabis Oil for the patient?\",\"fn\":\"Veuillez indiquer le schéma posologique prescrit au patient sous forme d’huile de cannabis?\"}', '{\"en\":\" (Please fill in the blanks below in a numeric format only)\",\"fn\":\"(Veuillez compléter l’énoncé suivant en inscrivant seulement des valeurs numériques.)  \"}', 21, 1, 1, '', 2, '2020-02-03 14:48:39', 1),
(23, '{\"en\":\"Please share the titration schedule for the prescribed Cannabis Softgel for the patient?\",\"fn\":\"Veuillez indiquer le schéma posologique prescrit au patient sous forme de gélules de cannabis.\"}', '{\"en\":\"(Please fill in the blanks below in a numeric format only)\",\"fn\":\"(Veuillez compléter l’énoncé suivant en inscrivant seulement des valeurs numériques.)\"}', 21, 2, 1, '', 2, '2020-02-03 14:48:39', 1),
(24, '{\"en\":\"Please enter the date of the follow up with the patient?\",\"fn\":\"Veuillez entrer la date du suivi auprès du patient.\"}', '', 0, 13, 5, '', 2, '2020-02-03 14:55:21', 1),
(25, '{\"en\":\"Is the patient’s chronic neuropathic pain related to Fibromyalgia?Ye\",\"fn\":\"La douleur chronique neuropathique du patient est-elle liée à la fibromyalgie?\"}', '{\"en\":\"(Please select only one answer.)\",\"fn\":\"(Veuillez sélectionner une seule réponse.)\"}', 10, 1, 2, '', 2, '2020-02-03 15:51:10', 1);

-- --------------------------------------------------------

--
-- Table structure for table `question_type`
--

CREATE TABLE `question_type` (
  `id` int(11) NOT NULL,
  `type` varchar(30) NOT NULL,
  `status` int(1) NOT NULL DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `question_type`
--

INSERT INTO `question_type` (`id`, `type`, `status`) VALUES
(1, 'text', 1),
(2, 'radio', 1),
(3, 'checkbox', 1),
(4, 'selectbox', 1),
(5, 'date', 1),
(6, 'subquestion', 1);

-- --------------------------------------------------------

--
-- Table structure for table `survey_type`
--

CREATE TABLE `survey_type` (
  `id` int(11) NOT NULL,
  `survey_code` varchar(20) NOT NULL,
  `type` varchar(50) NOT NULL,
  `header` text NOT NULL,
  `status` int(1) NOT NULL DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `survey_type`
--

INSERT INTO `survey_type` (`id`, `survey_code`, `type`, `header`, `status`) VALUES
(1, 'PRE', 'Pre-Meeting', '', 1),
(2, 'FAS', 'First Assessment', '', 1),
(3, 'FFU', 'First Follow Up', '', 1),
(4, 'SFU', 'Second Follow Up', '', 1),
(5, 'POST', 'Post Meeting', '', 1);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `user_id` varchar(11) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `role` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'staff',
  `province` int(11) NOT NULL,
  `city` int(11) NOT NULL,
  `dateWeb` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `pre_meeting` int(1) NOT NULL DEFAULT 0,
  `post_meeting` int(1) NOT NULL DEFAULT 0,
  `language` varchar(2) COLLATE utf8mb4_unicode_ci NOT NULL,
  `api_token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `user_id`, `name`, `email`, `email_verified_at`, `password`, `role`, `province`, `city`, `dateWeb`, `pre_meeting`, `post_meeting`, `language`, `api_token`, `remember_token`, `created_at`, `updated_at`) VALUES
(1, NULL, 'admin', 'akashbytes@gmail.com', NULL, '$2y$10$kacKZwnMVcOuCGE9kPOl9.pliaxKSfc4tpM0zjhfLS0IS3fMR62gG', 'admin', 0, 0, '', 1, 0, 'en', 'pm5Wm6IzOCUASvHCIlpDcFi1PcO8UaHDSZbL4eODfE2a06NEugtpDSOuApbI6syLv2MIvSaIks2nti3t', NULL, '2020-01-29 00:50:47', '2020-02-07 03:52:34'),
(17, '1', 'Akash Kumar', 'democlient@gmail.com', NULL, '$2y$10$nRDX1PdSsMQlGNvrGnQqwePSPgod0rDzyJHYHNwUbLzwPEMhdsuai', 'client', 2, 717, '2020-02-13', 0, 0, 'en', 'wLlLXKGL3nt4GnZpYb8PaimZBfYlArxJ7U2HMkiFfimnfuVD1DJNybHyN82BElc0wdH6sXNnGsWj3M6J', NULL, '2020-02-07 01:48:47', '2020-02-07 03:44:15'),
(18, '1', 'Akash Kumar', 'akashbytes@gmail.com1', NULL, '$2y$10$ogIUJ0FnSUGo9/N0ipxAZuVFFFm0t55Gp9JJo7KcNK1qNU9SCPh6i', 'client', 3, 162, '2020-02-14', 0, 0, 'en', 'p3EG8Y57RZPhSTNEVtz0Ymugj9AwYYTkA47p0NTbSK0pkiTDZuTPHfehP4JtWuXMWAisqpeVgYhuT5P0', NULL, '2020-02-07 01:54:10', '2020-02-07 02:04:08'),
(19, '1', 'Akash Kumar', 'akashbytes@gmail.com2', NULL, '$2y$10$kaABBROVlWZ5bFfM4ATqmO7qJigqomBOqn2myyBBenXVEuaUTDAEG', 'client', 4, 1224, '2020-02-20', 0, 0, 'en', '$2y$10$eEsTZHX./nqSCU6j8BA6ReiJj1TnZxh3IVofZkssPhy.1pw6znrm2', NULL, '2020-02-07 01:55:30', '2020-02-07 01:55:30'),
(20, '17', 'text doctor', 'testdoctor@email.com', NULL, '$2y$10$rlepx0BKq1x7uWGdimZTx.KvmTe2wTc2CCvhqqO/TnN459w7cA/z2', 'doctor', 2, 717, '2020-12-31', 0, 0, 'en', '$2y$10$mLVrDK09Jwp00uynZ6tlROSf2qCD5Oa/tAZyB5r35uGoWtK0Aq0Oy', NULL, '2020-02-07 03:45:41', '2020-02-07 03:45:41'),
(21, '17', 'testdoctor2', 'testdoctor2@email.com', NULL, '$2y$10$jWvhs6RaGQxQpNIJfFSdve80Xl10xUujJ0EkHpdw9ruEizrzXWfDq', 'doctor', 2, 718, '2020-12-31', 0, 0, 'en', '$2y$10$fAFmiR4WLKZqU90ejYKN5O2CKe1ANbfxQL.MmaJX02StxAtLCKcHK', NULL, '2020-02-07 03:49:53', '2020-02-07 03:49:53');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `answers`
--
ALTER TABLE `answers`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `city_m`
--
ALTER TABLE `city_m`
  ADD PRIMARY KEY (`City_ID`);

--
-- Indexes for table `failed_jobs`
--
ALTER TABLE `failed_jobs`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `options`
--
ALTER TABLE `options`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `password_resets`
--
ALTER TABLE `password_resets`
  ADD KEY `password_resets_email_index` (`email`);

--
-- Indexes for table `patients`
--
ALTER TABLE `patients`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `province_m`
--
ALTER TABLE `province_m`
  ADD PRIMARY KEY (`Province_ID`);

--
-- Indexes for table `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `question_type`
--
ALTER TABLE `question_type`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `survey_type`
--
ALTER TABLE `survey_type`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `users_email_unique` (`email`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `answers`
--
ALTER TABLE `answers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `city_m`
--
ALTER TABLE `city_m`
  MODIFY `City_ID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1798;

--
-- AUTO_INCREMENT for table `failed_jobs`
--
ALTER TABLE `failed_jobs`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT for table `options`
--
ALTER TABLE `options`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=115;

--
-- AUTO_INCREMENT for table `patients`
--
ALTER TABLE `patients`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `province_m`
--
ALTER TABLE `province_m`
  MODIFY `Province_ID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=15;

--
-- AUTO_INCREMENT for table `questions`
--
ALTER TABLE `questions`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=28;

--
-- AUTO_INCREMENT for table `question_type`
--
ALTER TABLE `question_type`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT for table `survey_type`
--
ALTER TABLE `survey_type`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
